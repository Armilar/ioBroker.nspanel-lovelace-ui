{
  "version": 3,
  "sources": ["../../../src/lib/const/definition.ts"],
  "sourcesContent": ["import { Off, On, HMIDark } from './Color';\nimport { NSpanelModel, PanelInfo, ScreenSaverPlaces, ScreensaverModeType } from '../types/types';\n\n/*type ChangeTypeToChannelAndState<Obj> = Obj extends object\n    ? {\n          [K in keyof Obj]-?: ChangeTypeToChannelAndState<Obj[K]>;\n      } & customChannelType\n    : ioBroker.StateObject;\nexport type ChangeToChannel<Obj, T> = Obj extends object\n    ? { [K in keyof Obj]-?: customChannelType & T }\n    : ioBroker.StateObject;\n*/\nexport type ChangeTypeOfKeysForState<Obj, N> = Obj extends object\n    ? customChannelType & { [K in keyof Obj]: ChangeTypeOfKeysForState<Obj[K], N> }\n    : N;\nexport type customChannelType = {\n    _channel: ioBroker.ChannelObject | ioBroker.DeviceObject | ioBroker.FolderObject;\n};\n\nexport const defaultChannel: ioBroker.ChannelObject = {\n    _id: '',\n    type: 'channel',\n    common: {\n        name: 'Hey no description... ',\n    },\n    native: {},\n};\n\nexport const genericStateObjects: {\n    default: ioBroker.StateObject;\n    customString: ioBroker.StateObject;\n    panel: customChannelType & {\n        panels: customChannelType & {\n            cmd: customChannelType & {\n                power1: ioBroker.StateObject;\n                power2: ioBroker.StateObject;\n                screensaverTimeout: ioBroker.StateObject;\n                dimActive: ioBroker.StateObject;\n                dimStandby: ioBroker.StateObject;\n                goToNavigationPoint: ioBroker.StateObject;\n            };\n            info: customChannelType & {\n                status: ioBroker.StateObject;\n            } & ChangeTypeOfKeysForState<Required<PanelInfo>, ioBroker.StateObject>;\n            alarm: customChannelType & {\n                cardAlarm: customChannelType & {\n                    status: ioBroker.StateObject;\n                    trigger: ioBroker.StateObject;\n                    arm: ioBroker.StateObject;\n                };\n            };\n        };\n    };\n} = {\n    default: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'StateObjects.state',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n    panel: {\n        _channel: {\n            _id: '',\n            type: 'folder',\n            common: {\n                name: 'StateObjects.panel',\n            },\n            native: {},\n        },\n        panels: {\n            _channel: {\n                _id: '',\n                type: 'device',\n                common: {\n                    name: 'StateObjects.panels',\n                },\n                native: {},\n            },\n            cmd: {\n                _channel: {\n                    _id: '',\n                    type: 'channel',\n                    common: {\n                        name: 'StateObjects.cmd',\n                    },\n                    native: {},\n                },\n                goToNavigationPoint: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.navigateToPage',\n                        type: 'string',\n                        role: 'value.text',\n                        read: true,\n                        write: true,\n                        states: {},\n                    },\n                    native: {},\n                },\n                power1: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.power1',\n                        type: 'boolean',\n                        role: 'switch',\n                        read: true,\n                        write: true,\n                    },\n                    native: {},\n                },\n                power2: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.power2',\n                        type: 'boolean',\n                        role: 'switch',\n                        read: true,\n                        write: true,\n                    },\n                    native: {},\n                },\n                screensaverTimeout: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.screensaverTimeout',\n                        type: 'number',\n                        role: 'value',\n                        unit: 's',\n                        read: true,\n                        write: true,\n                    },\n                    native: {},\n                },\n                dimStandby: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.dimStandby',\n                        type: 'number',\n                        role: 'value',\n                        unit: '%',\n                        read: true,\n                        write: true,\n                    },\n                    native: {},\n                },\n                dimActive: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.dimActive',\n                        type: 'number',\n                        role: 'value',\n                        unit: '%',\n                        read: true,\n                        write: true,\n                    },\n                    native: {},\n                },\n            },\n            info: {\n                _channel: {\n                    _id: '',\n                    type: 'channel',\n                    common: {\n                        name: 'StateObjects.info',\n                    },\n                    native: {},\n                },\n                status: {\n                    _id: '',\n                    type: 'state',\n                    common: {\n                        name: 'StateObjects.status',\n                        type: 'string',\n                        role: 'json',\n                        read: true,\n                        write: false,\n                    },\n                    native: {},\n                },\n                nspanel: {\n                    _channel: {\n                        _id: '',\n                        type: 'channel',\n                        common: {\n                            name: 'StateObjects.nspanel',\n                        },\n                        native: {},\n                    },\n                    currentPage: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.currentPage',\n                            type: 'string',\n                            role: 'text',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    displayVersion: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.displayVersion',\n                            type: 'string',\n                            role: 'text',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    model: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.model',\n                            type: 'string',\n                            role: 'text',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    bigIconLeft: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.bigIconLeft',\n                            type: 'boolean',\n                            role: 'indicator',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    bigIconRight: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.bigIconRight',\n                            type: 'boolean',\n                            role: 'indicator',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    isOnline: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.isOnline',\n                            type: 'boolean',\n                            role: 'indicator.reachable',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                },\n                tasmota: {\n                    _channel: {\n                        _id: '',\n                        type: 'channel',\n                        common: {\n                            name: 'Tasmota',\n                        },\n                        native: {},\n                    },\n\n                    uptime: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.uptime',\n                            type: 'string',\n                            role: 'text',\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    wifi: {\n                        _channel: {\n                            _id: '',\n                            type: 'channel',\n                            common: {\n                                name: 'StateObjects.wifi',\n                            },\n                            native: {},\n                        },\n                        ssid: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.ssid',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        rssi: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.rssi',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        downtime: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.downtime',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                    },\n                    net: {\n                        _channel: {\n                            _id: '',\n                            type: 'channel',\n                            common: {\n                                name: 'StateObjects.net',\n                            },\n                            native: {},\n                        },\n                        ip: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.ip',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        gateway: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.gateway',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        dnsserver: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.dnsserver',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        subnetmask: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.subnetmask',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        hostname: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.hostname',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                        mac: {\n                            _id: '',\n                            type: 'state',\n                            common: {\n                                name: 'StateObjects.mac',\n                                type: 'string',\n                                role: 'text',\n                                read: true,\n                                write: false,\n                            },\n                            native: {},\n                        },\n                    },\n                },\n            },\n            alarm: {\n                _channel: {\n                    _id: '',\n                    type: 'channel',\n                    common: {\n                        name: 'StateObjects.alarm',\n                    },\n                    native: {},\n                },\n                cardAlarm: {\n                    _channel: {\n                        _id: '',\n                        type: 'channel',\n                        common: {\n                            name: 'StateObjects.cardAlarm',\n                        },\n                        native: {},\n                    },\n                    status: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.power2',\n                            type: 'number',\n                            role: 'value',\n                            states: ['disarmed', 'armed', 'arming', 'pending', 'triggered'],\n                            read: true,\n                            write: false,\n                        },\n                        native: {},\n                    },\n                    trigger: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.power2',\n                            type: 'boolean',\n                            role: 'button',\n                            read: false,\n                            write: true,\n                        },\n                        native: {},\n                    },\n                    arm: {\n                        _id: '',\n                        type: 'state',\n                        common: {\n                            name: 'StateObjects.power2',\n                            type: 'boolean',\n                            role: 'button',\n                            read: false,\n                            write: true,\n                        },\n                        native: {},\n                    },\n                },\n            },\n        },\n    },\n\n    customString: {\n        _id: 'User_State',\n        type: 'state',\n        common: {\n            name: 'StateObjects.customString',\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n};\n\nexport const Defaults = {\n    state: {\n        _id: 'No_definition',\n        type: 'state',\n        common: {\n            name: 'No definition',\n\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n        native: {},\n    },\n};\n\n/******************************* Begin CONFIG Parameter *******************************/\n\n// DE: liefert bei true detailliertere Meldundgen im Log.\n// EN: if true, provides more detailed messages in the log.\nexport const Debug: boolean = false;\n\n/***** 1. Tasmota-Config *****/\n\n// DE: Anpassen an die Verzeichnisse der MQTT-Adapter-Instanz\n// EN: Adapt to the MQTT adapter instance directories\nexport const NSPanelReceiveTopic: string = 'mqtt.0.SmartHome.NSPanel_1.tele.RESULT';\nexport const NSPanelSendTopic: string = 'mqtt.0.SmartHome.NSPanel_1.cmnd.CustomSend';\n\n// DE: nur \u00E4ndern, falls der User im Tasmota vor dem Kompilieren umbenannt wurde (Standard Tasmota: admin)\n// EN: only change if the user was renamed in Tasmota before compiling (default Tasmota: admin)\nexport const tasmota_web_admin_user: string = 'admin';\n\n// DE: setzten, falls \"Web Admin Password\" in Tasmota vergeben\n// EN set if \"Web Admin Password\" is assigned in Tasmota\nexport const tasmota_web_admin_password: string = '';\n\n// DE: Setzen der bevorzugten Tasmota32-Version (f\u00FCr Updates)\n// EN: Set preferred Tasmota32 version (for updates)\nexport const tasmotaOtaVersion: string = 'tasmota32-DE.bin';\n// DE: Es k\u00F6nnen ebenfalls andere Versionen verwendet werden wie zum Beispiel:\n// EN: Other versions can also be used, such as:\n// 'tasmota32-nspanel.bin' or 'tasmota32.bin' or 'tasmota32-DE.bin' or etc.\n\n/***** 2. Directories in 0_userdata.0... *****/\n\n// DE: Anpassen an das jeweilige NSPanel\n// EN: Adapt to the respective NSPanel\nexport const NSPanel_Path = '0_userdata.0.NSPanel.1.';\n\n// DE: Pfad f\u00FCr gemeinsame Nutzung durch mehrere Panels (bei Nutzung der cardAlarm/cardUnlock)\n// EN: Path for sharing between multiple panels (when using cardAlarm/cardUnlock)\nexport const NSPanel_Alarm_Path = '0_userdata.0.NSPanel.';\n\n/***** 3. Weather adapter Config *****/\n\n// DE: M\u00F6gliche Wetteradapter 'accuweather.0.' oder 'daswetter.0.'\n// EN: Possible weather adapters 'accuweather.0.' or 'the weather.0.'\nexport const weatherAdapterInstance: string = 'accuweather.0.';\n\n// DE: M\u00F6gliche Werte: 'Min', 'Max' oder 'MinMax' im Screensaver\n// EN: Possible values: 'Min', 'Max' or 'MinMax' in the screensaver\nexport const weatherScreensaverTempMinMax: string = 'MinMax';\n\n// DE: Dieser Alias wird automatisch f\u00FCr den gew\u00E4hlten Wetter erstellt und kann entsprechend angepasst werden\n// EN: This alias is automatically created for the selected weather and can be adjusted accordingly\nexport const weatherEntityPath: string = 'alias.0.Wetter';\n\n/***** 4. Color constants for use in the PageItems *****/\n\n// DE: Bei Bedarf k\u00F6nnen weitere Farben definiert werden\n// EN: If necessary, additional colors can be defined\n\n/***** 5. Script - Parameters *****/\n\n// DE: F\u00FCr diese Option muss der Haken in setObjects in deiner javascript.X. Instanz gesetzt sein.\n// EN: This option requires the check mark in setObjects in your javascript.X. instance must be set.\nexport const autoCreateAlias = true;\n\n// DE: Verzeichnis f\u00FCr Auto-Aliase (wird per Default aus dem NSPanel-Verzeichnis gebildet und muss nicht ver\u00E4ndert werden)\n// EN: Directory for auto aliases (is created by default from the NSPanel directory and does not need to be changed)\nexport const AliasPath: string = 'alias.0.' + NSPanel_Path.substring(13, NSPanel_Path.length);\n\n// DE: Default-Farbe f\u00FCr Off-Zust\u00E4nde\n// EN: Default color for off states\nexport const defaultOffColorParam: any = Off;\n\n// DE: Default-Farbe f\u00FCr On-Zust\u00E4nde\n// EN: Default color for on states\nexport const defaultOnColorParam: any = On;\n\nexport const defaultColorParam: any = Off;\n\n// DE: Default-Hintergrundfarbe HMIDark oder Black\n// EN: Default background color HMIDark or Black\nexport const defaultBackgroundColorParam: any = HMIDark;\n\n/******************************** End CONFIG Parameter ********************************/\n\n//-- Anfang f\u00FCr eigene Seiten -- z.T. selbstdefinierte Aliase erforderlich ----------------\n//-- Start for your own pages -- some self-defined aliases required ----------------\n\n//-- https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Page-%E2%80%90-Typen_How-2_Beispiele\n\n//-- ENDE f\u00FCr eigene Seiten -- z.T. selbstdefinierte Aliase erforderlich -------------------------\n//-- END for your own pages -- some self-defined aliases required ------------------------\n\n/***********************************************************************************************\n **  Service Pages mit Auto-Alias (Nachfolgende Seiten werden mit Alias automatisch angelegt) **\n **  https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Service-Men%C3%BC             **\n ***********************************************************************************************/\n\n/* DE: German\n       Wenn das Service Men\u00FC abgesichert werden soll, kann eine cardUnlock vorgeschaltet werden.\n       F\u00FCr diesen Fall ist folgende Vorgehensweise erforderlich:\n       - cardUnlock Seite \"Unlock_Service\" in der Config unter pages auskommentieren (\"//\" entfernen)\n       - Servicemen\u00FC aus pages \"NSPanel_Service\" unter pages kommentieren (\"//\" hinzuf\u00FCgen)\n    */\n\n/*************************************************************************************************\n ** Service pages with auto alias (subsequent pages are automatically created with alias)      **\n ** https://github.com/joBr99/nspanel-lovelace-ui/wiki/NSPanel-Service-Men%C3%BC               **\n ************************************************************************************************/\n\n/* EN: English\n        If the service menu needs to be secured, a cardUnlock can be installed upstream.\n        In this case, the following procedure is required:\n        - comment out cardUnlock page \"Unlock_Service\" in the config under pages (remove \"//\")\n        - Comment service menu from pages \"NSPanel_Service\" under pages (add \"//\")\n    */\nexport const scriptVersion: string = 'v4.3.3.33';\nexport const tft_version: string = 'v4.3.3';\nexport const desired_display_firmware_version = 53;\nexport const berry_driver_version = 9;\n\nexport const tasmotaOtaUrl: string = 'http://ota.tasmota.com/tasmota32/release/';\n\nexport const ScreenSaverConst: Record<\n    ScreensaverModeType,\n    Record<ScreenSaverPlaces, { maxEntries: Record<NSpanelModel, number> }>\n> = {\n    standard: {\n        left: {\n            maxEntries: { eu: 0 },\n        },\n        bottom: {\n            maxEntries: { eu: 4 },\n        },\n        alternate: {\n            maxEntries: { eu: 0 },\n        },\n        indicator: {\n            maxEntries: { eu: 0 },\n        },\n        mricon: {\n            maxEntries: { eu: 2 },\n        },\n        favorit: {\n            maxEntries: { eu: 1 },\n        },\n        time: {\n            maxEntries: { eu: 1 },\n        },\n        date: {\n            maxEntries: { eu: 1 },\n        },\n    },\n    alternate: {\n        left: {\n            maxEntries: { eu: 0 },\n        },\n        bottom: {\n            maxEntries: { eu: 3 },\n        },\n        alternate: {\n            maxEntries: { eu: 1 },\n        },\n        indicator: {\n            maxEntries: { eu: 0 },\n        },\n        mricon: {\n            maxEntries: { eu: 2 },\n        },\n        favorit: {\n            maxEntries: { eu: 1 },\n        },\n        time: {\n            maxEntries: { eu: 1 },\n        },\n        date: {\n            maxEntries: { eu: 1 },\n        },\n    },\n    advanced: {\n        left: {\n            maxEntries: { eu: 3 },\n        },\n        bottom: {\n            maxEntries: { eu: 6 },\n        },\n        alternate: {\n            maxEntries: { eu: 0 },\n        },\n        indicator: {\n            maxEntries: { eu: 5 },\n        },\n        mricon: {\n            maxEntries: { eu: 2 },\n        },\n        favorit: {\n            maxEntries: { eu: 1 },\n        },\n        time: {\n            maxEntries: { eu: 1 },\n        },\n        date: {\n            maxEntries: { eu: 1 },\n        },\n    },\n};\n\n/*export const PageTypeDefinition: Record<PageTypeCards, { maxEntries: number }> = {\n    cardAlarm: {\n        maxEntries: { eu: 1 },\n    },\n    cardChart: {\n        maxEntries: { eu: 1 },\n    },\n    cardEntities: {\n        maxEntries: { eu: 5 },\n    },\n    cardGrid: {\n        maxEntries: { eu: 6 },\n    },\n    cardGrid2: {\n        maxEntries: { eu: 8 },\n    },\n    cardLChart: {\n        maxEntries: { eu: 1 },\n    },\n    cardMedia: {\n        maxEntries: { eu: 1 },\n    },\n    cardPower: {\n        maxEntries: { eu: 1 },\n    },\n    cardQR: {\n        maxEntries: { eu: 1 },\n    },\n    cardThermo: {\n        maxEntries: { eu: 1 },\n    },\n    cardUnlock: {\n        maxEntries: { eu: 1 },\n    },\n};*/\n\nexport const ReiveTopicAppendix = '/tele/RESULT';\nexport const SendTopicAppendix = '/cmnd/CustomSend';\n"],
  "mappings": "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",
  "names": []
}
