{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageEntities.ts"],
  "sourcesContent": ["import { Page, PageInterface } from '../classes/Page';\nimport { HMIOn, rgb_dec565 } from '../const/Color';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload, getPayloadArray } from '../const/tools';\nimport * as pages from '../types/pages';\nimport { IncomingEvent } from '../types/types';\nimport { PageItem } from './pageItem';\n\nconst PageEntitiesMessageDefault: pages.PageEntitiesMessage = {\n    event: 'entityUpd',\n    headline: 'Page Entities',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    options: ['~~~~~', '~~~~~', '~~~~~', '~~~~~', '~~~~~'],\n};\n\nexport class PageEntities extends Page {\n    config: pages.PageBaseConfig['config'];\n    items: pages.PageBaseConfig['items'];\n    private maxItems: number = 4;\n    private step: number = 0;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    private nextArrow: boolean = false;\n    private lastNavClick: number = 0;\n    tempItem: PageItem | undefined;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options);\n        this.config = options.config;\n        if (options.items && options.items.card == 'cardEntities') this.items = options.items;\n        this.minUpdateInterval = 2000;\n    }\n\n    async init(): Promise<void> {\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardEntitiesDataItemOptions> =\n            this.enums || this.dpInit\n                ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config, undefined, this.enums)\n                : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardEntitiesDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        this.items = tempItem as pages.cardEntitiesDataItems;\n        // set card because we lose it\n        this.items.card = this.card as 'cardEntities';\n        await super.init();\n    }\n\n    public async update(): Promise<void> {\n        if (!this.visibility) return;\n        const message: Partial<pages.PageEntitiesMessage> = {};\n        message.options = [];\n        if (this.pageItems) {\n            let a = this.step;\n            for (; a < this.maxItems + this.step; a++) {\n                const temp = this.pageItems[a];\n                if (temp) message.options[a - this.step] = await temp.getPageItemPayload();\n            }\n        }\n        message.headline = this.library.getTranslation(\n            (this.items && this.items.data.headline && (await this.items.data.headline.getString())) ?? '',\n        );\n        message.navigation = this.getNavigation();\n        const msg: pages.PageEntitiesMessage = Object.assign(PageEntitiesMessageDefault, message);\n\n        this.sendToPanel(this.getMessage(msg));\n    }\n    private getMessage(message: pages.PageEntitiesMessage): string {\n        return getPayload('entityUpd', message.headline, message.navigation, getPayloadArray(message.options));\n    }\n    protected async onStateTrigger(): Promise<void> {\n        await this.update();\n    }\n    async onButtonEvent(_event: IncomingEvent): Promise<void> {}\n\n    goLeft(): void {\n        if (--this.step < 0 && Date.now() - this.lastNavClick > 300) {\n            this.step = 0;\n            this.panel.navigation.goLeft();\n        } else this.update();\n        this.lastNavClick = Date.now();\n    }\n    goRight(): void {\n        const length = this.pageItems ? this.pageItems.length : 0;\n        if (++this.step + this.maxItems >= length && Date.now() - this.lastNavClick > 300) {\n            this.step--;\n            this.panel.navigation.goRight();\n        } else this.update();\n        this.lastNavClick = Date.now();\n    }\n    protected getNavigation(): string {\n        const length = this.pageItems ? this.pageItems.length : 0;\n        if (this.maxItems >= length) {\n            return super.getNavigation();\n        }\n        let left = '';\n        let right = '';\n        if (this.step <= 0) {\n            left = this.panel.navigation.buildNavigationString('left');\n        }\n        if (this.step + 1 + this.maxItems >= length) {\n            right = this.panel.navigation.buildNavigationString('right');\n        }\n        if (!left)\n            left = getPayload('button', 'bSubPrev', Icons.GetIcon('arrow-up-bold'), String(rgb_dec565(HMIOn)), '', '');\n\n        if (!right)\n            right = getPayload(\n                'button',\n                'bSubNext',\n                Icons.GetIcon('arrow-down-bold'),\n                String(rgb_dec565(HMIOn)),\n                '',\n                '',\n            );\n\n        return getPayload(left, right);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
