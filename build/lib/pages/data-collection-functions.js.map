{
  "version": 3,
  "sources": ["../../../src/lib/pages/data-collection-functions.ts"],
  "sourcesContent": ["import { AdapterClassDefinition } from '../classes/library';\nimport { Green, Red, Yellow } from '../const/Color';\nimport { CardRole } from '../types/pages';\nimport { PageItemDataItemsOptions } from '../types/type-pageItem';\n\nexport async function handleCardRole(\n    adapter: AdapterClassDefinition,\n    cardRole: CardRole | undefined,\n): Promise<PageItemDataItemsOptions[] | null> {\n    if (!cardRole) return null;\n    switch (cardRole) {\n        /**\n         * only for enabled adapters\n         */\n        case 'AdapterConnection':\n        case 'AdapterStopped': {\n            const list = await adapter.getObjectViewAsync('system', 'instance', {\n                startkey: `system.adapter`,\n                endkey: `system.adapter}`,\n            });\n            if (!list) return null;\n            const result = [];\n            for (const item of list.rows) {\n                const obj = item.value;\n                if (!obj.common.enabled || obj.common.mode !== 'daemon') continue;\n                let n = obj.common.titleLang && obj.common.titleLang[adapter.library.getLocalLanguage()];\n                n = n ? n : obj.common.titleLang && obj.common.titleLang['en'];\n                n = n ? n : obj.common.name;\n                const state = await adapter.getForeignStateAsync(\n                    cardRole === 'AdapterConnection'\n                        ? `${item.id.split('.').slice(2).join('.')}.info.connection`\n                        : `${item.id}.alive`,\n                );\n                if (!state) continue;\n                const pi: PageItemDataItemsOptions = {\n                    role: 'text.list',\n                    type: 'text',\n                    dpInit: '',\n\n                    data: {\n                        icon: {\n                            true: {\n                                value: { type: 'const', constVal: 'checkbox-intermediate' },\n                                color: { type: 'const', constVal: Green },\n                            },\n                            false: {\n                                value: { type: 'const', constVal: 'checkbox-intermediate' },\n                                color: { type: 'const', constVal: cardRole === 'AdapterConnection' ? Yellow : Red },\n                            },\n                            scale: undefined,\n                            maxBri: undefined,\n                            minBri: undefined,\n                        },\n                        entity1: {\n                            value: {\n                                type: 'triggered',\n                                dp:\n                                    cardRole === 'AdapterConnection'\n                                        ? `${item.id.split('.').slice(2).join('.')}.info.connection`\n                                        : `${item.id}.alive`,\n                            },\n                        },\n                        text: {\n                            true: { type: 'const', constVal: n },\n                            false: undefined,\n                        },\n                        text1: {\n                            true: { type: 'const', constVal: obj.common.version },\n                            false: undefined,\n                        },\n                    },\n                };\n                result.push(pi);\n            }\n            return result;\n        }\n    }\n    return null;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAmC;AAInC,eAAsB,eAClB,SACA,UAC0C;AAC1C,MAAI,CAAC;AAAU,WAAO;AACtB,UAAQ,UAAU;AAAA,IAId,KAAK;AAAA,IACL,KAAK,kBAAkB;AACnB,YAAM,OAAO,MAAM,QAAQ,mBAAmB,UAAU,YAAY;AAAA,QAChE,UAAU;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC;AACD,UAAI,CAAC;AAAM,eAAO;AAClB,YAAM,SAAS,CAAC;AAChB,iBAAW,QAAQ,KAAK,MAAM;AAC1B,cAAM,MAAM,KAAK;AACjB,YAAI,CAAC,IAAI,OAAO,WAAW,IAAI,OAAO,SAAS;AAAU;AACzD,YAAI,IAAI,IAAI,OAAO,aAAa,IAAI,OAAO,UAAU,QAAQ,QAAQ,iBAAiB,CAAC;AACvF,YAAI,IAAI,IAAI,IAAI,OAAO,aAAa,IAAI,OAAO,UAAU,IAAI;AAC7D,YAAI,IAAI,IAAI,IAAI,OAAO;AACvB,cAAM,QAAQ,MAAM,QAAQ;AAAA,UACxB,aAAa,sBACP,GAAG,KAAK,GAAG,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC,qBACxC,GAAG,KAAK,EAAE;AAAA,QACpB;AACA,YAAI,CAAC;AAAO;AACZ,cAAM,KAA+B;AAAA,UACjC,MAAM;AAAA,UACN,MAAM;AAAA,UACN,QAAQ;AAAA,UAER,MAAM;AAAA,YACF,MAAM;AAAA,cACF,MAAM;AAAA,gBACF,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,gBAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,mBAAM;AAAA,cAC5C;AAAA,cACA,OAAO;AAAA,gBACH,OAAO,EAAE,MAAM,SAAS,UAAU,wBAAwB;AAAA,gBAC1D,OAAO,EAAE,MAAM,SAAS,UAAU,aAAa,sBAAsB,sBAAS,iBAAI;AAAA,cACtF;AAAA,cACA,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,YACZ;AAAA,YACA,SAAS;AAAA,cACL,OAAO;AAAA,gBACH,MAAM;AAAA,gBACN,IACI,aAAa,sBACP,GAAG,KAAK,GAAG,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC,qBACxC,GAAG,KAAK,EAAE;AAAA,cACxB;AAAA,YACJ;AAAA,YACA,MAAM;AAAA,cACF,MAAM,EAAE,MAAM,SAAS,UAAU,EAAE;AAAA,cACnC,OAAO;AAAA,YACX;AAAA,YACA,OAAO;AAAA,cACH,MAAM,EAAE,MAAM,SAAS,UAAU,IAAI,OAAO,QAAQ;AAAA,cACpD,OAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ;AACA,eAAO,KAAK,EAAE;AAAA,MAClB;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": []
}
