{
  "version": 3,
  "sources": ["../../../src/lib/controller/panel-controller.ts"],
  "sourcesContent": ["import * as MQTT from '../classes/mqtt';\nimport * as Library from '../classes/library';\nimport { StatesControler } from './states-controller';\nimport * as Panel from './panel';\n\nexport class Controller extends Library.BaseClass {\n    mqttClient: MQTT.MQTTClientClass;\n    private DBPanels: Panel.Panel[] = [];\n    statesControler: StatesControler;\n    panel: Panel.Panel[] = [];\n    constructor(\n        adapter: Library.AdapterClassDefinition,\n        options: { mqttClient: MQTT.MQTTClientClass; name: string; panels: Partial<Panel.panelConfigPartial>[] },\n    ) {\n        super(adapter, options.name);\n        this.adapter.controller = this;\n        this.mqttClient = options.mqttClient;\n        this.statesControler = new StatesControler(this.adapter);\n        for (const panelConfig of options.panels) {\n            panelConfig.controller = this;\n            if (!Panel.isPanelConfig(panelConfig)) {\n                this.log.warn(`Panelconfig for ${panelConfig.name} is invalid!`);\n                continue;\n            }\n            const panel = new Panel.Panel(adapter, panelConfig);\n            this.checkPanel(panel);\n        }\n    }\n    async checkPanel(panel: Panel.Panel): Promise<void> {\n        if (await panel.isValid()) {\n            this.panel.push(panel);\n            await panel.init();\n        } else {\n            panel.delete();\n            this.log.error(`Panel ${panel.name} has a invalid configuration.`);\n        }\n    }\n    async delete(): Promise<void> {\n        await super.delete();\n        this.panel.forEach((a) => a.delete());\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAyB;AACzB,+BAAgC;AAChC,YAAuB;AAEhB,MAAM,mBAAmB,QAAQ,UAAU;AAAA,EAC9C;AAAA,EACQ,WAA0B,CAAC;AAAA,EACnC;AAAA,EACA,QAAuB,CAAC;AAAA,EACxB,YACI,SACA,SACF;AACE,UAAM,SAAS,QAAQ,IAAI;AAC3B,SAAK,QAAQ,aAAa;AAC1B,SAAK,aAAa,QAAQ;AAC1B,SAAK,kBAAkB,IAAI,yCAAgB,KAAK,OAAO;AACvD,eAAW,eAAe,QAAQ,QAAQ;AACtC,kBAAY,aAAa;AACzB,UAAI,CAAC,MAAM,cAAc,WAAW,GAAG;AACnC,aAAK,IAAI,KAAK,mBAAmB,YAAY,kBAAkB;AAC/D;AAAA,MACJ;AACA,YAAM,QAAQ,IAAI,MAAM,MAAM,SAAS,WAAW;AAClD,WAAK,WAAW,KAAK;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,MAAM,WAAW,OAAmC;AAChD,QAAI,MAAM,MAAM,QAAQ,GAAG;AACvB,WAAK,MAAM,KAAK,KAAK;AACrB,YAAM,MAAM,KAAK;AAAA,IACrB,OAAO;AACH,YAAM,OAAO;AACb,WAAK,IAAI,MAAM,SAAS,MAAM,mCAAmC;AAAA,IACrE;AAAA,EACJ;AAAA,EACA,MAAM,SAAwB;AAC1B,UAAM,MAAM,OAAO;AACnB,SAAK,MAAM,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;AAAA,EACxC;AACJ;",
  "names": []
}
