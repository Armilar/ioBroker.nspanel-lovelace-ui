{
  "version": 3,
  "sources": ["../../../src/lib/const/tools.ts"],
  "sourcesContent": ["import { Dataitem, isDataItem } from '../classes/data-item';\nimport {\n    ColorEntryType,\n    IconEntryType,\n    MessageItem,\n    PageItemLightDataItems,\n    ScaledNumberType,\n    TextEntryType,\n    ValueEntryType,\n} from '../types/type-pageItem';\nimport { Library } from '../classes/library';\nimport { RGB } from '../types/Color';\nimport {\n    HMIOff,\n    HMIOn,\n    Interpolate,\n    White,\n    darken,\n    getHue,\n    hsv2rgb,\n    isRGB,\n    kelvinToRGB,\n    rgb_dec565,\n    scale,\n} from './Color';\nimport { Icons } from './icon_mapping';\nimport { ChangeTypeOfKeys } from '../types/pages';\n\nexport const messageItemDefault: MessageItem = {\n    type: 'input_sel',\n    intNameEntity: '',\n    icon: '',\n    iconColor: '',\n    displayName: '',\n    optionalValue: '',\n};\nexport function ifValueEntryIs(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined>,\n    type: ioBroker.CommonType,\n): boolean {\n    if (i && i.value && i.value.type) return i.value.type === type;\n    return false;\n}\nexport async function setValueEntryNumber(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined>,\n    value: number,\n    s: boolean = true,\n): Promise<void> {\n    if (!i || !i.value) return;\n\n    let res = value / ((i.factor && (await i.factor.getNumber())) ?? 1);\n    if (s && i.minScale !== undefined && i.maxScale !== undefined) {\n        const min = await i.minScale.getNumber();\n        const max = await i.maxScale.getNumber();\n        if (min !== null && max !== null) {\n            res = Math.round(scale(res, 100, 0, min, max));\n        }\n    }\n    if (i.set && i.set.writeable) await i.set.setStateAsync(res);\n    else await i.value.setStateAsync(res);\n}\nexport async function getValueEntryNumber(\n    i: ChangeTypeOfKeys<ValueEntryType | ScaledNumberType, Dataitem | undefined>,\n    s: boolean = true,\n): Promise<number | null> {\n    if (!i) return null;\n    const nval = i.value && (await i.value.getNumber());\n    if (nval !== null && nval !== undefined) {\n        let res = nval * ((i.factor && (await i.factor.getNumber())) ?? 1);\n        if (s && i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) {\n                res = scale(res, max, min, 0, 100);\n            }\n        }\n        return res;\n    }\n    return null;\n}\nfunction getScaledNumberRaw(\n    n: number,\n    min: number | null,\n    max: number | null,\n    oldValue: number | null | false = null,\n): number {\n    if (min !== null && max !== null) {\n        if (oldValue === null) {\n            n = Math.round(scale(n, max, min, 0, 100));\n        } else {\n            n = scale(n, 100, 0, min, max);\n            if (oldValue !== false) {\n                if (oldValue >= n) n = Math.floor(n);\n                else n = Math.ceil(n);\n            } else {\n                n = Math.round(n);\n            }\n        }\n    }\n    return n;\n}\n\nexport async function getScaledNumber(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n): Promise<number | null> {\n    if (!i) return null;\n    let nval = i.value && (await i.value.getNumber());\n    if (nval !== null && nval !== undefined) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            nval = getScaledNumberRaw(nval, min, max);\n        }\n        return nval;\n    }\n    return null;\n}\n\nexport async function getTemperaturColorFromValue(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n    dimmer: number = 100,\n): Promise<string | null> {\n    if (!i) return null;\n    let nval = i.value && (await i.value.getNumber());\n    const mode = i.mode && (await i.mode.getString());\n    let kelvin = 3500;\n    if (nval !== null && nval !== undefined) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            nval = getScaledNumberRaw(nval, min, max);\n        }\n        if (mode === 'mired') {\n            kelvin = 10 ** 6 / nval;\n        } else {\n            kelvin = nval;\n        }\n        kelvin = kelvin > 7000 ? 7000 : kelvin < 1800 ? 1800 : kelvin;\n\n        let r = kelvinToRGB[Math.trunc(kelvin / 100) * 100];\n        r = darken(r, scale(dimmer, 100, 0, 0, 1));\n        return r ? String(rgb_dec565(r)) : null;\n    }\n    return null;\n}\n\nexport async function getSliderCTFromValue(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n): Promise<string | null> {\n    if (!i) return null;\n    let nval = i.value && (await i.value.getNumber());\n    const mode = i.mode && (await i.mode.getString());\n    let r = 3500;\n    if (nval !== null && nval !== undefined) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) nval = Math.round(scale(nval, max, min, 1800, 7000));\n        }\n        if (mode === 'mired') {\n            r = 10 ** 6 / nval;\n        } else {\n            r = nval;\n        }\n        r = r > 7000 ? 7000 : r < 1800 ? 1800 : r;\n\n        r = getScaledNumberRaw(r, 1800, 7000);\n        return r !== null ? String(r) : null;\n    }\n    return null;\n}\nexport async function setSliderCTFromValue(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n    value: number,\n): Promise<void> {\n    if (!i || !i.value) return;\n    const nval = (i.value && (await i.value.getNumber())) ?? null;\n    const mode = i.mode && (await i.mode.getString());\n    //value = 100 - value;\n    if (nval !== null) {\n        let r = getScaledNumberRaw(value, 1800, 7000, false);\n        r = r > 7000 ? 7000 : r < 1800 ? 1800 : r;\n        if (mode === 'mired') {\n            r = 10 ** 6 / r;\n        }\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            const min = await i.minScale.getNumber();\n            const max = await i.maxScale.getNumber();\n            if (min !== null && max !== null) r = Math.round(scale(nval, 7000, 1800, min, max));\n        }\n        if (i.set && i.set.writeable) await i.value.setStateAsync(r);\n        else if (nval !== value) await i.value.setStateAsync(r);\n    }\n}\n\nexport async function setScaledNumber(\n    i: ChangeTypeOfKeys<ScaledNumberType, Dataitem | undefined>,\n    value: number,\n): Promise<void> {\n    if (!i || !i.value) return;\n    const nval = (await i.value.getNumber()) ?? null;\n    if (nval !== null) {\n        if (i.minScale !== undefined && i.maxScale !== undefined) {\n            value = getScaledNumberRaw(value, await i.minScale.getNumber(), await i.maxScale.getNumber(), value);\n        }\n        if (i.set && i.set.writeable) await i.value.setStateAsync(value);\n        else if (nval !== value) await i.value.setStateAsync(value);\n    }\n}\n\nexport async function getIconEntryValue(\n    i: ChangeTypeOfKeys<IconEntryType, Dataitem | undefined> | undefined,\n    on: boolean | null,\n    def: string,\n    defOff: string | null = null,\n    getText: boolean = false,\n): Promise<string> {\n    if (i === undefined) return '';\n    on = on ?? true;\n    if (!i) return Icons.GetIcon(on ? def : defOff ?? def);\n    const text = getText ? (i.true && i.true.text && (await i.true.text.getString())) ?? null : null;\n    if (text !== null) {\n        if (!on) return (i.false && i.false.text && (await i.false.text.getString())) ?? text;\n        return text;\n    }\n    const icon = (i.true && i.true.value && (await i.true.value.getString())) ?? null;\n    if (!on) {\n        return Icons.GetIcon((i.false && i.false.value && (await i.false.value.getString())) ?? defOff ?? icon ?? def);\n    }\n    return Icons.GetIcon(icon ?? def);\n}\nexport async function getIconEntryColor(\n    i: ChangeTypeOfKeys<IconEntryType, Dataitem | undefined> | undefined,\n    on: boolean | number | null,\n    def: string | RGB | number,\n    defOff: string | RGB | null = null,\n): Promise<string> {\n    on = on ?? true;\n    if (typeof def === 'number') def = String(def);\n    else if (typeof def !== 'string') def = String(rgb_dec565(def));\n\n    if (typeof defOff === 'number') defOff = String(def);\n    else if (defOff === null) defOff = null;\n    else if (typeof defOff !== 'string') defOff = String(rgb_dec565(defOff));\n\n    if (!i) return def;\n    const icon = i.true && i.true.color && (await i.true.color.getRGBDec());\n    if (!on) {\n        return (i.false && i.false.color && (await i.false.color.getRGBDec())) ?? defOff ?? icon ?? def;\n    }\n    return icon ?? def;\n}\nexport async function GetIconColor(\n    item: ChangeTypeOfKeys<IconEntryType, Dataitem | undefined> | undefined | RGB,\n    value: boolean | number | null,\n    min: number | null = null,\n    max: number | null = null,\n    offColor: RGB | null = null,\n): Promise<string> {\n    // dimmer\n    if (item === undefined) return '';\n    if (isRGB(item)) {\n        const onColor = item;\n        if (typeof value === 'number') {\n            let val: number = typeof value === 'number' ? value : 0;\n            const maxValue = max ?? 100;\n            const minValue = min ?? 0;\n            val = val > maxValue ? maxValue : val;\n            val = val < minValue ? minValue : val;\n            return String(\n                rgb_dec565(\n                    !offColor\n                        ? darken(onColor ? onColor : HMIOn, scale(val, maxValue, minValue, 0, 1))\n                        : Interpolate(offColor, onColor ? onColor : HMIOn, scale(val, maxValue, minValue, 0, 1)),\n                ),\n            );\n        }\n        if (value) {\n            return String(rgb_dec565(onColor ? onColor : HMIOn));\n        }\n        return String(rgb_dec565(offColor ? offColor : HMIOff));\n    } else {\n        const onColor = item.true && item.true.color && (await item.true.color.getRGBValue());\n        const offColor = item.false && item.false.color && (await item.false.color.getRGBValue());\n        if (typeof value === 'number') {\n            let val: number = typeof value === 'number' ? value : 0;\n            const maxValue = ((item.maxBri && (await item.maxBri.getNumber())) || max) ?? 100;\n            const minValue = ((item.minBri && (await item.minBri.getNumber())) || min) ?? 0;\n            val = val > maxValue ? maxValue : val;\n            val = val < minValue ? minValue : val;\n            return String(\n                rgb_dec565(\n                    !offColor\n                        ? darken(onColor ? onColor : HMIOn, scale(val, maxValue, minValue, 0, 1))\n                        : Interpolate(offColor, onColor ? onColor : HMIOn, scale(val, maxValue, minValue, 0, 1)),\n                ),\n            );\n        }\n\n        if (value) {\n            return String(rgb_dec565(onColor ? onColor : HMIOn));\n        }\n        return String(rgb_dec565(offColor ? offColor : HMIOff));\n    }\n}\n\nexport async function getEntryColor(\n    i: ChangeTypeOfKeys<ColorEntryType, Dataitem | undefined> | undefined,\n    value: boolean | number,\n    def: string | number | RGB,\n): Promise<string> {\n    if (i === undefined) return '';\n    if (typeof def === 'number') def = String(def);\n    else if (typeof def !== 'string') def = String(rgb_dec565(def));\n    if (!i) return def;\n    const color = i.true && (await i.true.getRGBDec());\n    if (!value) {\n        return (i.false && (await i.false.getRGBDec())) ?? color ?? def;\n    }\n    return color ?? def;\n}\nexport async function getEntryTextOnOff(\n    i: ChangeTypeOfKeys<TextEntryType, Dataitem | undefined> | undefined | Dataitem,\n    on: boolean | null,\n): Promise<string | null> {\n    if (!i) return null;\n    if (!isDataItem(i)) {\n        //i = i as ChangeTypeOfKeys<TextEntryType, Dataitem>;\n        const value = i.true && (await i.true.getString());\n        if (!(on ?? true)) {\n            return (i.false && (await i.false.getString())) ?? value ?? null;\n        }\n        return value ?? null;\n    } else {\n        return (await i.getString()) ?? null;\n    }\n}\n\nexport async function getValueEntryBoolean(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined> | undefined,\n): Promise<boolean | null> {\n    if (!i) return null;\n    const nval = i.value && (await i.value.getBoolean());\n    if (nval !== undefined) {\n        return nval;\n    }\n    return null;\n}\n\nexport async function getValueEntryString(\n    i: ChangeTypeOfKeys<ValueEntryType, Dataitem | undefined> | undefined,\n    v: number | null = null,\n): Promise<string | null> {\n    if (!i || !i.value) return null;\n    const nval = v !== null ? v : await getValueEntryNumber(i);\n    if (nval !== null && nval !== undefined) {\n        const d = (i.decimal && (await i.decimal.getNumber())) ?? null;\n        let result: string = String(nval);\n        if (d !== null) {\n            result = nval.toFixed(d);\n        }\n        return result + ((i.unit && (await i.unit.getString())) ?? '');\n    }\n    const res = await i.value.getString();\n    if (res != null) res + ((i.unit && (await i.unit.getString())) ?? '');\n    return res;\n}\n\nexport function getTranslation(library: Library, key1: any | string, key2?: string): string {\n    let result = key2 ?? key1;\n    if (key2 !== undefined) {\n        result = library.getLocalTranslation(key1, key2);\n    }\n    result = library.getTranslation(result || key1);\n    return result;\n}\n\nexport const getRGBfromRGBThree = async (item: PageItemLightDataItems['data']): Promise<RGB | null> => {\n    if (!item) return White;\n    const red = (item.Red && (await item.Red.getNumber())) ?? -1;\n    const green = (item.Green && (await item.Green.getNumber())) ?? -1;\n    const blue = (item.Blue && (await item.Blue.getNumber())) ?? -1;\n    if (red === -1 || blue === -1 || green === -1) return null;\n    return { r: red, g: green, b: blue };\n};\nexport const getDecfromRGBThree = async (item: PageItemLightDataItems['data']): Promise<string | null> => {\n    const rgb = await getRGBfromRGBThree(item);\n    if (!rgb) return null;\n    return String(rgb_dec565(rgb));\n};\nexport const setRGBThreefromRGB = async (item: PageItemLightDataItems['data'], c: RGB): Promise<void> => {\n    if (!item || !item.Red || !item.Green || !item.Blue) return;\n    await item.Red.setStateAsync(c.r);\n    await item.Green.setStateAsync(c.g);\n    await item.Blue.setStateAsync(c.b);\n};\n\nexport const getDecfromHue = async (item: PageItemLightDataItems['data']): Promise<string | null> => {\n    if (!item || !item.hue) return null;\n    const hue = await item.hue.getNumber();\n    let saturation = Math.abs((item.saturation && (await item.saturation.getNumber())) ?? 1);\n    if (saturation > 1) saturation = 1;\n    if (hue === null) return null;\n    const arr = hsv2rgb(hue, saturation, 1);\n    return String(rgb_dec565({ r: arr[0], g: arr[1], b: arr[2] }));\n};\n\nexport const setHuefromRGB = async (item: PageItemLightDataItems['data'], c: RGB): Promise<void> => {\n    if (!item || !item.hue || !isRGB(c)) return;\n    if (!item.hue.writeable) {\n        return;\n    }\n    //let saturation = Math.abs((item.saturation && (await item.saturation.getNumber())) ?? 1);\n    //if (saturation > 1) saturation = 1;\n    const hue = getHue(c.r, c.g, c.b);\n    await item.hue.setStateAsync(hue);\n};\n\nexport function formatInSelText(Text: string[] | string): string {\n    if (Text === undefined || Text === null) return `error`;\n    let splitText = Text;\n    if (typeof splitText === 'string') splitText = splitText.replaceAll('__', '_').replaceAll('_', ' ').split(' ');\n\n    let lengthLineOne = 0;\n    const arrayLineOne: string[] = [];\n    for (let i = 0; i < splitText.length; i++) {\n        lengthLineOne += splitText[i].length + 1;\n        if (lengthLineOne > 12) {\n            break;\n        } else {\n            arrayLineOne[i] = splitText[i];\n        }\n    }\n    const textLineOne = arrayLineOne.join(' ');\n    const arrayLineTwo: string[] = [];\n    for (let i = arrayLineOne.length; i < splitText.length; i++) {\n        arrayLineTwo[i] = splitText[i];\n    }\n    let textLineTwo = arrayLineTwo.join(' ');\n    if (textLineTwo.length > 12) {\n        textLineTwo = textLineTwo.substring(0, 9) + '...';\n    }\n    if (textLineOne.length != 0) {\n        return textLineOne + '\\r\\n' + textLineTwo.trim();\n    } else {\n        return textLineTwo.trim();\n    }\n}\n\n/**\n * Create a part of the panel messsage for bottom icons. if event === '' u get '~~~~~~'.\n * default for event: input_sel\n * @param msg {Partial<MessageItem>}\n * @returns string\n */\nexport function getItemMesssage(msg: Partial<MessageItem> | undefined): string {\n    if (!msg || !msg.intNameEntity || !msg.type) return '~~~~~';\n    const id: string[] = [];\n    if (msg.mainId) id.push(msg.mainId);\n    if (msg.subId) id.push(msg.subId);\n    if (msg.intNameEntity) id.push(msg.intNameEntity);\n    return getPayload(\n        msg.type ?? messageItemDefault.type,\n        id.join('?') ?? messageItemDefault.intNameEntity,\n        msg.icon ?? messageItemDefault.icon,\n        msg.iconColor ?? messageItemDefault.iconColor,\n        msg.displayName ?? messageItemDefault.displayName,\n        msg.optionalValue ?? messageItemDefault.optionalValue,\n    );\n}\n\nexport function getPayloadArray(s: (string | any)[]): string {\n    return s.join('~');\n}\nexport function getPayload(...s: string[]): string {\n    return s.join('~');\n}\n\n/**\n * Deep assign of jsons, dont use this for Json with objects/classes\n * @param def Json with json, number, boolean, strings, null, undefined\n * @param source Json with json, number, boolean, strings, null, undefined\n * @param level ignore\n * @returns\n */\nexport function deepAssign(def: Record<any, any>, source: Record<any, any>, level: number = 0): any {\n    if (level++ > 20) {\n        throw new Error('Max level reached! Circulating object is suspected!');\n    }\n    for (const k in def) {\n        if (typeof def[k] === 'object') {\n            if (source[k] === null || def[k] === null) {\n                source[k] = undefined;\n                def[k] = undefined;\n            } else if (source[k] !== undefined) {\n                def[k] = deepAssign(def[k], source[k]);\n            } else if (def[k] !== undefined) {\n                source[k] = def[k];\n            }\n        }\n    }\n    for (const k in source) {\n        if (typeof source[k] === 'object' && k in source) {\n            if (source[k] === null) {\n                source[k] = undefined;\n                def[k] = undefined;\n            } else if (def[k] === undefined) {\n                def[k] = source[k];\n            }\n        }\n    }\n    return Object.assign(def, source);\n}\n"],
  "mappings": "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",
  "names": ["import_Color", "offColor"]
}
