{
  "version": 3,
  "sources": ["../../../src/lib/tools/readme.ts"],
  "sourcesContent": ["import * as fs from 'fs';\nimport { requiredOutdatedDataPoints } from '../const/config-manager-const';\n\nexport async function generateAliasDocumentation(): Promise<void> {\n    const checkPath = '.dev-data';\n    let readme = `| Channel role | State ID | common.type | common.role | required | common.write | description |  \\n`;\n    readme += `| :---: | :--- | :--- | :--- | :---: | :---: | :--- |  \\n`;\n    let test = fs.readdirSync('./');\n    if (test) {\n        test = [''];\n    }\n    if (fs.existsSync(checkPath)) {\n        let lastFolder = '';\n        for (const folder in requiredOutdatedDataPoints) {\n            const data = requiredOutdatedDataPoints[folder];\n            for (const key in data) {\n                const row = data[key];\n                readme += `| ${folder == lastFolder ? '\"' : folder} | ${key} | ${row.type}| ${row.role}  | ${row.required ? 'X' : ''} | ${row.writeable ? 'X' : ''} | ${row.description ? row.description : ''} | \\n`;\n                lastFolder = folder;\n            }\n        }\n        fs.writeFileSync('ALIAS.md', readme);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AACpB,kCAA2C;AAE3C,eAAsB,6BAA4C;AAC9D,QAAM,YAAY;AAClB,MAAI,SAAS;AAAA;AACb,YAAU;AAAA;AACV,MAAI,OAAO,GAAG,YAAY,IAAI;AAC9B,MAAI,MAAM;AACN,WAAO,CAAC,EAAE;AAAA,EACd;AACA,MAAI,GAAG,WAAW,SAAS,GAAG;AAC1B,QAAI,aAAa;AACjB,eAAW,UAAU,wDAA4B;AAC7C,YAAM,OAAO,uDAA2B,MAAM;AAC9C,iBAAW,OAAO,MAAM;AACpB,cAAM,MAAM,KAAK,GAAG;AACpB,kBAAU,KAAK,UAAU,aAAa,MAAM,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,WAAW,MAAM,EAAE,MAAM,IAAI,YAAY,MAAM,EAAE,MAAM,IAAI,cAAc,IAAI,cAAc,EAAE;AAAA;AAC9L,qBAAa;AAAA,MACjB;AAAA,IACJ;AACA,OAAG,cAAc,YAAY,MAAM;AAAA,EACvC;AACJ;",
  "names": []
}
