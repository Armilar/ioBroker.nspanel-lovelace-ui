{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageAlarm.ts"],
  "sourcesContent": ["import { Page, PageInterface } from '../classes/Page';\nimport { Green, rgb_dec565 } from '../const/Color';\nimport { genericStateObjects } from '../const/definition';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload } from '../const/tools';\nimport * as pages from '../types/pages';\nimport { IncomingEvent } from '../types/types';\n\nconst PageAlarmMessageDefault: pages.PageAlarmMessage = {\n    event: 'entityUpd',\n    headline: 'Page Grid',\n    intNameEntity: '',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    button1: '',\n    status1: '',\n    button2: '',\n    status2: '',\n    button3: '',\n    status3: '',\n    button4: '',\n    status4: '',\n    icon: '',\n    iconColor: '',\n    numpad: 'disable',\n    flashing: 'disable',\n};\nconst alarmStates: pages.AlarmStates[] = ['disarmed', 'armed', 'arming', 'pending', 'triggered'];\n\n/**\n * untested\n */\nexport class PageAlarm extends Page {\n    items: pages.PageBaseConfig['items'];\n    private step: number = 1;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    private nextArrow: boolean = false;\n    private status: pages.AlarmStates = 'armed';\n\n    async setMode(m: pages.AlarmButtonEvents): Promise<void> {\n        this.library.writedp(\n            `panels.${this.panel.name}.alarm.${this.name}.mode`,\n            m,\n            genericStateObjects.panel.panels.alarm.cardAlarm.mode,\n        );\n    }\n\n    async getStatus(): Promise<pages.AlarmStates> {\n        const state = this.adapter.library.readdb(`panels.${this.panel.name}.alarm.${this.name}.status`);\n        if (state) {\n            if (typeof state.val === 'number') {\n                this.status = alarmStates[state.val];\n            }\n        }\n        return this.status;\n    }\n\n    async setStatus(value: pages.AlarmStates): Promise<void> {\n        this.status = value;\n        await this.library.writedp(\n            `panels.${this.panel.name}.alarm.${this.name}.status`,\n            alarmStates.indexOf(this.status),\n            genericStateObjects.panel.panels.alarm.cardAlarm.status,\n        );\n    }\n    private pin: number = 0;\n    private failCount: number = 0;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options);\n        if (options.config && options.config.card == 'cardAlarm') this.config = options.config;\n        this.minUpdateInterval = 500;\n        this.neverDeactivateTrigger = true;\n    }\n\n    async init(): Promise<void> {\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardAlarmDataItemOptions> =\n            this.enums || this.dpInit\n                ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config, undefined, this.enums)\n                : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardAlarmDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        this.items = tempItem as pages.cardAlarmDataItems;\n        // set card because we lose it\n        this.items.card = 'cardAlarm';\n        this.library.writedp(\n            `panels.${this.panel.name}.alarm.${this.name}`,\n            undefined,\n            genericStateObjects.panel.panels.alarm.cardAlarm._channel,\n        );\n        await super.init();\n        const status = await this.getStatus();\n        if (status === 'pending') await this.setStatus('armed');\n        else if (status === 'arming') await this.setStatus('disarmed');\n        else await this.setStatus(this.status);\n\n        this.pin =\n            (this.items && this.items.data && this.items.data.pin && (await this.items.data.pin.getNumber())) ?? 0;\n    }\n\n    /**\n     *\n     * @returns\n     */\n    public async update(): Promise<void> {\n        if (!this.visibility) return;\n        await this.getStatus();\n        const message: Partial<pages.PageAlarmMessage> = {};\n        const items = this.items;\n        if (!items || items.card !== 'cardAlarm') return;\n        const data = items.data;\n        message.intNameEntity = this.id;\n        message.headline = (data.headline && (await data.headline.getTranslatedString())) ?? this.name;\n        message.navigation = this.getNavigation();\n        if (this.status === 'armed' || this.status === 'triggered') {\n            message.button1 = 'disarm';\n            message.status1 = 'D1';\n            message.button2 = '';\n            message.status2 = '';\n            message.button3 = '';\n            message.status3 = '';\n            message.button4 = '';\n            message.status4 = '';\n        } else {\n            //const entity1 = await getValueEntryNumber(data.entity1);\n            message.button1 =\n                (data.button1 && (await data.button1.getTranslatedString())) ?? this.library.getTranslation('arm_away');\n            message.status1 = message.button1 ? 'A1' : '';\n            message.button2 =\n                (data.button2 && (await data.button2.getTranslatedString())) ?? this.library.getTranslation('arm_home');\n            message.status2 = message.button2 ? 'A2' : '';\n            message.button3 =\n                (data.button3 && (await data.button3.getTranslatedString())) ??\n                this.library.getTranslation('arm_night');\n            message.status3 = message.button3 ? 'A3' : '';\n            message.button4 =\n                (data.button4 && (await data.button4.getTranslatedString())) ??\n                this.library.getTranslation('arm_vacation');\n            message.status4 = message.button4 ? 'A4' : '';\n        }\n        if (this.status == 'armed') {\n            message.icon = Icons.GetIcon('shield-home'); //icon*~*\n            message.iconColor = '63488'; //iconcolor*~*\n            message.numpad = 'enable'; //numpadStatus*~*\n            message.flashing = 'disable'; //flashing*\n        } else if (this.status == 'disarmed') {\n            message.icon = Icons.GetIcon('shield-off'); //icon*~*\n            message.iconColor = String(rgb_dec565(Green)); //iconcolor*~*\n            message.numpad = 'enable'; //numpadStatus*~*\n            message.flashing = 'disable'; //flashing*\n        } else if (this.status == 'arming' || this.status == 'pending') {\n            message.icon = Icons.GetIcon('shield'); //icon*~*\n            message.iconColor = String(rgb_dec565({ r: 243, g: 179, b: 0 })); //iconcolor*~*\n            message.numpad = 'disable'; //numpadStatus*~*\n            message.flashing = 'enable'; //flashing*\n        } else if (this.status == 'triggered') {\n            message.icon = Icons.GetIcon('bell-ring'); //icon*~*\n            message.iconColor = String(rgb_dec565({ r: 223, g: 76, b: 30 })); //iconcolor*~*\n            message.numpad = 'enable'; //numpadStatus*~*\n            message.flashing = 'enable'; //flashing*\n        }\n        //message.icon = await getIconEntryValue(data.icon, true, 'shield-home');\n        //message.iconColor = await getIconEntryColor(data.icon, true, '');\n        //message.numpad = 'enable';\n        //message.flashing = 'enable';\n\n        this.sendToPanel(this.getMessage(message));\n    }\n\n    private getMessage(message: Partial<pages.PageAlarmMessage>): string {\n        let result: pages.PageAlarmMessage = PageAlarmMessageDefault;\n        result = Object.assign(result, message) as pages.PageAlarmMessage;\n        return getPayload(\n            'entityUpd',\n            result.headline,\n            result.navigation,\n            result.intNameEntity,\n            result.button1,\n            result.status1,\n            result.button2,\n            result.status2,\n            result.button3,\n            result.status3,\n            result.button4,\n            result.status4,\n            result.icon,\n            result.iconColor,\n            result.numpad,\n            result.flashing,\n        );\n    }\n\n    protected async onStateTrigger(id: string): Promise<void> {\n        if (this.items && this.items.card === 'cardAlarm') {\n            const approved = this.items.data && this.items.data.approved;\n            if (approved && approved.options.type === 'triggered' && approved.options.dp === id) {\n                await this.getStatus();\n                const val = await approved.getBoolean();\n                if (val) {\n                    if (this.status === 'pending') await this.setStatus('disarmed');\n                    else if (this.status === 'arming') await this.setStatus('armed');\n                } else {\n                    if (this.status === 'pending') await this.setStatus('armed');\n                    else if (this.status === 'arming') await this.setStatus('disarmed');\n                }\n                this.adapter.setTimeout(() => this.update(), 50);\n            }\n        }\n    }\n    /**\n     *a\n     * @param _event\n     * @returns\n     */\n    async onButtonEvent(_event: IncomingEvent): Promise<void> {\n        const button = _event.action;\n        const value = _event.opt;\n        if (!this.items || this.items.card !== 'cardAlarm') return;\n        const approved = this.items.data && this.items.data.approved;\n\n        if (pages.isAlarmButtonEvent(button)) {\n            await this.getStatus();\n            if (this.status === 'triggered') return;\n\n            if (this.pin === 0) {\n                this.log.warn(`Pin is missing`);\n                return;\n            }\n            if (this.pin !== parseInt(value)) {\n                if (++this.failCount < 3) {\n                    this.log.warn('Wrong pin entered. try ' + this.failCount + ' of 3');\n                } else {\n                    this.log.error('Wrong pin entered. locked!');\n                    await this.setStatus('triggered');\n                }\n                this.update;\n                return;\n            }\n            this.log.debug('Alarm event ' + button + ' value: ' + value);\n            switch (button) {\n                case 'A1':\n                case 'A2':\n                case 'A3':\n                case 'A4': {\n                    if (this.status === 'disarmed' && approved) {\n                        await this.setStatus('arming');\n                        await this.setMode(button);\n                        this.adapter.setTimeout(() => this.update(), 50);\n                    } else if (this.status === 'arming') {\n                    } else if (!approved) {\n                        await this.setStatus('armed');\n                        await this.setMode(button);\n                        this.adapter.setTimeout(() => this.update(), 50);\n                    }\n                    break;\n                }\n                case 'D1': {\n                    if (this.status === 'armed' && approved) {\n                        await this.setStatus('pending');\n                        await this.setMode(button);\n                        this.adapter.setTimeout(() => this.update(), 50);\n                    } else if (this.status === 'pending') {\n                    } else if (!approved) {\n                        await this.setStatus('disarmed');\n                        await this.setMode(button);\n                        this.adapter.setTimeout(() => this.update(), 50);\n                    }\n\n                    break;\n                }\n                case 'U1': {\n                    break;\n                }\n            }\n        }\n        //if (event.page && event.id && this.pageItems) {\n        //    this.pageItems[event.id as any].setPopupAction(event.action, event.opt);\n        //}\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
