{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageThermo.ts"],
  "sourcesContent": ["import { Page, PageInterface } from '../classes/Page';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload, getPayloadArray } from '../const/tools';\nimport * as pages from '../types/pages';\nimport { ButtonActionType, IncomingEvent, PopupType } from '../types/types';\n\nconst PageThermoMessageDefault: pages.PageThermoMessage = {\n    event: 'entityUpd',\n    headline: 'Page Thermo',\n    navigation: 'button~bSubPrev~~~~~button~bSubNext~~~~',\n    intNameEntity: '',\n    currentTemp: '',\n    dstTemp: '',\n    status: '',\n    minTemp: '10',\n    maxTemp: '40',\n    tempStep: '5',\n    options: ['~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~'],\n    tCurTempLbl: '',\n    tStateLbl: '',\n    tALbl: '',\n    tCF: '',\n    temp2: '',\n    btDetail: 1,\n};\n\nexport class PageThermo extends Page {\n    //config: pages.cardThermoDataItemOptions;\n    items: pages.cardThermoDataItems | undefined;\n    private step: number = 1;\n    private headlinePos: number = 0;\n    private titelPos: number = 0;\n    private nextArrow: boolean = false;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        if (options.card === 'screensaver' || options.card === 'screensaver2') return;\n        if (options && options.pageItems) {\n            options.pageItems.unshift({\n                type: 'button',\n                dpInit: '',\n                role: 'button',\n                modeScr: undefined,\n                data: {\n                    icon: {\n                        true: {\n                            value: { type: 'const', constVal: 'arrow-right-bold-circle-outline' },\n                            color: { type: 'const', constVal: { red: 205, green: 142, blue: 153 } },\n                        },\n                    },\n                    entity1: { value: { type: 'const', constVal: true } },\n                },\n            });\n        }\n        super(config, options);\n        if (options.config && options.config.card == 'cardThermo') this.config = options.config;\n        else throw new Error('Missing config!');\n        if (options.items && options.items.card == 'cardThermo') this.items = options.items;\n        this.minUpdateInterval = 2000;\n    }\n\n    async init(): Promise<void> {\n        const config = structuredClone(this.config);\n        // search states for mode auto\n        const tempConfig: Partial<pages.cardThermoDataItems> = this.dpInit\n            ? await this.panel.statesControler.getDataItemsFromAuto(this.dpInit, config)\n            : config;\n        // create Dataitems\n        //this.log.debug(JSON.stringify(tempConfig));\n        const tempItem: Partial<pages.cardThermoDataItems> = await this.panel.statesControler.createDataItems(\n            tempConfig,\n            this,\n        );\n        if (tempItem) tempItem.card = 'cardThermo';\n        this.items = tempItem as pages.cardThermoDataItems;\n        await super.init();\n    }\n\n    public async update(): Promise<void> {\n        const message: Partial<pages.PageThermoMessage> = {};\n        message.options = ['~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~', '~~~'];\n        if (this.items) {\n            const item = this.items;\n            if (this.pageItems) {\n                const pageItems = this.pageItems.filter((a) => a && a.dataItems && a.dataItems.type === 'button');\n                const localStep = pageItems.length > 9 ? 7 : 8;\n                if (pageItems.length - 1 <= localStep * (this.step - 1)) this.step = 1;\n                // arrow is at index [0]\n                const maxSteps = localStep * this.step + 1;\n                const minStep = localStep * (this.step - 1) + 1;\n                let b = 0;\n                for (let a = minStep; a < maxSteps; a++, b++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[b] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    } else getPayload('', '', '', '');\n                }\n\n                if (localStep === 7) {\n                    this.nextArrow = true;\n                    const temp = this.pageItems[0];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[7] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    } else getPayload('', '', '', '');\n                }\n\n                /*for (let a = 0; a < pageItems.length && a < message.options.length; a++) {\n                    const temp = pageItems[a];\n                    if (temp) {\n                        const arr = (await temp.getPageItemPayload()).split('~');\n                        message.options[a] = getPayload(arr[2], arr[3], arr[5] == '1' ? '1' : '0', arr[1]);\n                    }\n                }*/\n            }\n            message.intNameEntity = this.id;\n            message.headline = (item.data.headline && (await item.data.headline.getString())) ?? '';\n            message.navigation = this.getNavigation();\n            let v: any = (item.data.current && (await item.data.current.getNumber())) ?? null;\n            if (v !== null) {\n                message.currentTemp = (v as number).toFixed(1);\n            } else {\n                v = (item.data.current && (await item.data.current.getString())) ?? null;\n                if (v !== null) {\n                    message.currentTemp = this.library.getTranslation(v);\n                }\n            }\n            v = (item.data.set1 && (await item.data.set1.getNumber())) ?? null;\n            if (v !== null) {\n                message.dstTemp = v * 10;\n            }\n            v = (item.data.minTemp && (await item.data.minTemp.getNumber())) ?? null;\n            if (v !== null) {\n                message.minTemp = v * 10;\n            }\n            v = (item.data.maxTemp && (await item.data.maxTemp.getNumber())) ?? null;\n            if (v !== null) {\n                message.maxTemp = v * 10;\n            }\n            v = (item.data.set2 && (await item.data.set2.getNumber())) ?? null;\n            if (v !== null) {\n                message.temp2 = v * 10;\n            }\n            v = (item.data.unit && (await item.data.unit.getString())) ?? null;\n            if (v !== null) {\n                message.tCF = v;\n                message.currentTemp += v;\n            }\n            v = (item.data.text1 && (await item.data.text1.getString())) ?? null;\n            if (v !== null) {\n                message.tCurTempLbl = this.library.getTranslation(v);\n            }\n            v = (item.data.text2 && (await item.data.text2.getString())) ?? null;\n            if (v !== null) {\n                message.tStateLbl = this.library.getTranslation(v);\n            }\n            v = (item.data.tempStep && (await item.data.tempStep.getString())) ?? null;\n            if (v !== null) {\n                message.tempStep = v;\n            }\n            v = (item.data.mode && (await item.data.mode.getNumber())) ?? null;\n            if (v !== null) {\n                message.status = v;\n            } else {\n                v = (item.data.mode && (await item.data.mode.getString())) ?? null;\n                if (v !== null) {\n                    message.status = this.library.getTranslation(v);\n                }\n            }\n\n            message.btDetail = '';\n            //this.pageItems && this.pageItems.some((a) => a.dataItems && a.dataItems.type === 'input_sel') ? '' : 1;\n        }\n        const msg: pages.PageThermoMessage = Object.assign(PageThermoMessageDefault, message);\n\n        this.sendToPanel(this.getMessage(msg));\n    }\n\n    async onButtonEvent(event: IncomingEvent): Promise<void> {\n        if (event.action === 'tempUpdHighLow') {\n            if (!this.items) return;\n            const values = event.opt.split('|');\n            const newValLow = parseInt(values[0]) / 10;\n            const newValHigh = parseInt(values[1]) / 10;\n            const valLow = (this.items && this.items.data.set1 && (await this.items.data.set1.getNumber())) ?? null;\n            const valHigh = (this.items && this.items.data.set2 && (await this.items.data.set2.getNumber())) ?? null;\n            if (valLow !== null && newValLow !== valLow) this.items.data.set1!.setStateAsync(newValLow);\n            if (valHigh !== null && newValHigh !== valHigh) await this.items.data.set2!.setStateAsync(newValHigh);\n        } else if (event.action === 'tempUpd') {\n            if (!this.items) return;\n            const newValLow = parseInt(event.opt) / 10;\n            const valLow = (this.items && this.items.data.set1 && (await this.items.data.set1.getNumber())) ?? null;\n            if (valLow !== null && newValLow !== valLow) await this.items.data.set1!.setStateAsync(newValLow);\n        } else if (\n            event.action === 'hvac_action' &&\n            this.pageItems &&\n            this.pageItems[Number(event.opt.split('?')[1])]\n        ) {\n            if (this.nextArrow && event.opt.split('?')[1] === '0') {\n                this.step++;\n                this.update();\n            } else if (await this.pageItems[Number(event.opt.split('?')[1])]!.onCommand('button', '')) return;\n        }\n    }\n\n    public async onPopupRequest(\n        id: number | string,\n        popup: PopupType | undefined,\n        action: ButtonActionType | undefined | string,\n        value: string | undefined,\n        _event: IncomingEvent | null = null,\n    ): Promise<void> {\n        if (!this.pageItems || !this.pageItems.some((a) => a && a.dataItems && a.dataItems.type === 'input_sel'))\n            return;\n        const items = this.pageItems; //.filter((a) => a.dataItems && a.dataItems.type === 'input_sel');\n        let msg: string | null = null;\n        if (popup === 'popupThermo') {\n            const temp = [];\n            const id = this.id;\n            const icon = Icons.GetIcon(\n                (this.items && this.items.data.icon && (await this.items.data.icon.getString())) ?? 'fan',\n            );\n            const color = (this.items && this.items.data.icon && (await this.items.data.icon.getRGBDec())) ?? '11487';\n            for (const i of items) {\n                i && temp.push(getPayload((await i.GeneratePopup(popup)) ?? '~~~'));\n            }\n            for (let a = 0; a < 3; a++) {\n                if (temp[a] === undefined) temp[a] = '~~~';\n            }\n            msg = getPayload('entityUpdateDetail', id, icon, color, temp[0], temp[1], temp[2], '');\n        } else if (action && action.startsWith('mode') && value !== undefined) {\n            const tempid = parseInt(action.split('?')[1]);\n            const item = items[tempid];\n            if (!item) return;\n            item.onCommand('mode-insel', value);\n        }\n        if (msg !== null) {\n            this.sendToPanel(msg);\n        }\n    }\n\n    private getMessage(message: pages.PageThermoMessage): string {\n        return getPayload(\n            'entityUpd',\n            message.headline,\n            message.navigation,\n            message.intNameEntity,\n            String(message.currentTemp),\n            String(message.dstTemp),\n            message.status,\n            String(message.minTemp),\n            String(message.maxTemp),\n            message.tempStep,\n            getPayloadArray(message.options),\n            message.tCurTempLbl,\n            message.tStateLbl,\n            message.tALbl,\n            message.tCF,\n            String(message.temp2),\n            String(message.btDetail),\n        );\n    }\n}\n"],
  "mappings": "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",
  "names": ["id"]
}
