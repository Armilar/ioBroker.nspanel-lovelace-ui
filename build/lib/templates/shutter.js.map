{
  "version": 3,
  "sources": ["../../../src/lib/templates/shutter.ts"],
  "sourcesContent": ["import * as Color from '../const/Color';\nimport { PageItemOptionsTemplate } from '../types/type-pageItem';\n\nexport const shutterTemplates: PageItemOptionsTemplate[] = [\n    {\n        /**\n         * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n         */\n        name: 'generic.shutter',\n        role: '',\n        type: 'shutter',\n        adapter: '',\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'window-shutter-open' },\n                    color: { type: 'const', constVal: Color.Yellow },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'window-shutter' },\n                    color: { type: 'const', constVal: Color.HMIOff },\n                },\n                scale: undefined,\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            // 1. slider\n            entity1: {\n                // button\n                value: { mode: 'auto', role: 'level.blind', type: 'triggered', dp: '' },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n                minScale: { type: 'const', constVal: 0 },\n                maxScale: { type: 'const', constVal: 100 },\n            },\n            // 2. slider\n            entity2: {\n                // button\n                value: { mode: 'auto', role: 'level.tilt', type: 'triggered', dp: '' },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n                minScale: { type: 'const', constVal: 0 },\n                maxScale: { type: 'const', constVal: 100 },\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'text',\n                },\n                false: undefined,\n            },\n            headline: {\n                type: 'const',\n                constVal: 'Shutter',\n            },\n            text1: {\n                true: {\n                    type: 'const',\n                    constVal: 'text1',\n                },\n                false: undefined,\n            },\n            text2: {\n                true: {\n                    type: 'const',\n                    constVal: 'text2',\n                },\n                false: undefined,\n            },\n            up: {\n                type: 'state',\n                dp: '',\n                mode: 'auto',\n                role: ['button.open.blind', 'button.open'],\n            },\n            down: {\n                type: 'state',\n                dp: '',\n                mode: 'auto',\n                role: ['button.close.blind', 'button.close'],\n            },\n            up2: {\n                type: 'state',\n                dp: '',\n                mode: 'auto',\n                role: ['button.open.tilt'],\n            },\n            stop2: {\n                type: 'state',\n                dp: '',\n                mode: 'auto',\n                role: ['button.stop.tilt'],\n            },\n            /**\n             * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n             */\n            //valueList: { type: 'const', constVal: 'home?butter' },\n            /**\n             * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n             */\n            //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n        },\n    },\n    {\n        role: '',\n        type: 'shutter',\n        name: 'shutter.shelly.2PM',\n        template: 'shutter.basic.onlyV',\n        adapter: '0_userdata.0',\n\n        data: {\n            // 1. slider\n            entity1: {\n                // button\n                value: { mode: 'auto', role: 'level.blind', type: 'triggered', dp: '.Shutter.Position' },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n                minScale: { type: 'const', constVal: 0 },\n                maxScale: { type: 'const', constVal: 100 },\n            },\n            // 2. slider\n            entity2: undefined,\n            headline: {\n                type: 'const',\n                constVal: 'SHSW-25',\n            },\n            up: {\n                type: 'state',\n                dp: '.Shutter.Open',\n                mode: 'auto',\n                role: ['button'],\n            },\n            down: {\n                type: 'state',\n                dp: '.Shutter.Close',\n                mode: 'auto',\n                role: ['button'],\n            },\n            stop: {\n                type: 'state',\n                dp: '.Shutter.Pause',\n                mode: 'auto',\n                role: ['button'],\n            },\n        },\n    },\n    {\n        role: '',\n        type: 'shutter',\n        name: 'shutter.basic',\n        adapter: '',\n\n        data: {\n            up: undefined,\n            down: undefined,\n            stop: undefined,\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'window-shutter-open' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'window-shutter' },\n                    color: { type: 'const', constVal: Color.HMIOff },\n                },\n            },\n            text: {\n                true: {\n                    type: 'const',\n                    constVal: 'Shutter control',\n                },\n                false: undefined,\n            },\n            text1: {\n                true: {\n                    type: 'const',\n                    constVal: 'up/down',\n                },\n                false: undefined,\n            },\n            text2: {\n                true: {\n                    type: 'const',\n                    constVal: 'tilt',\n                },\n                false: undefined,\n            },\n        },\n    },\n    {\n        role: '',\n        type: 'shutter',\n        name: 'shutter.basic.onlyV',\n        template: 'shutter.basic',\n        adapter: '',\n\n        data: {\n            up: undefined,\n            down: undefined,\n            text2: {\n                true: null,\n                false: null,\n            },\n        },\n    },\n    {\n        role: '',\n        type: 'shutter',\n        name: 'shutter.deconz.ikea.fyrtur',\n        template: 'shutter.basic.onlyV',\n        adapter: 'deconz',\n\n        data: {\n            // 1. slider\n            entity1: {\n                // button\n                value: { mode: 'auto', role: 'level.value', type: 'triggered', dp: '.lift' },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n                minScale: { type: 'const', constVal: 1 },\n                maxScale: { type: 'const', constVal: 78 },\n            },\n            up: { mode: 'auto', role: 'level.value', type: 'state', dp: '.lift', write: 'return 1' },\n\n            down: { mode: 'auto', role: 'level.value', type: 'state', dp: '.lift', write: 'return 78' },\n            stop: {\n                type: 'state',\n                dp: '.stop',\n                mode: 'auto',\n                role: ['button'],\n            },\n        },\n    },\n];\n"],
  "mappings": "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",
  "names": []
}
