{
  "version": 3,
  "sources": ["../../../src/lib/controller/controller.ts"],
  "sourcesContent": ["import * as MQTT from '../classes/mqtt';\nimport * as Library from '../classes/library';\nimport { StatesControler } from './states-controller';\nimport * as Panel from './panel';\n\nexport class Controller extends Library.BaseClass {\n    mqttClient: MQTT.MQTTClientClass;\n    statesControler: StatesControler;\n    panels: Panel.Panel[] = [];\n    constructor(\n        adapter: Library.AdapterClassDefinition,\n        options: { mqttClient: MQTT.MQTTClientClass; name: string; panels: Partial<Panel.panelConfigPartial>[] },\n    ) {\n        super(adapter, options.name);\n        this.adapter.controller = this;\n        this.mqttClient = options.mqttClient;\n        this.statesControler = new StatesControler(this.adapter);\n        for (const panelConfig of options.panels) {\n            panelConfig.controller = this;\n            if (!Panel.isPanelConfig(panelConfig)) {\n                this.log.warn(`Panelconfig for ${panelConfig.name} is invalid!`);\n                continue;\n            }\n            const panel = new Panel.Panel(adapter, panelConfig);\n            this.panels.push(panel);\n        }\n    }\n\n    async init(): Promise<void> {\n        const newPanels = [];\n        for (const panel of this.panels)\n            if (await panel.isValid()) {\n                newPanels.push(panel);\n                await panel.init();\n            } else {\n                panel.delete();\n                this.log.error(`Panel ${panel.name} has a invalid configuration.`);\n            }\n        this.panels = newPanels;\n    }\n    async delete(): Promise<void> {\n        await super.delete();\n        this.panels.forEach((a) => a.delete());\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAyB;AACzB,+BAAgC;AAChC,YAAuB;AAEhB,MAAM,mBAAmB,QAAQ,UAAU;AAAA,EAC9C;AAAA,EACA;AAAA,EACA,SAAwB,CAAC;AAAA,EACzB,YACI,SACA,SACF;AACE,UAAM,SAAS,QAAQ,IAAI;AAC3B,SAAK,QAAQ,aAAa;AAC1B,SAAK,aAAa,QAAQ;AAC1B,SAAK,kBAAkB,IAAI,yCAAgB,KAAK,OAAO;AACvD,eAAW,eAAe,QAAQ,QAAQ;AACtC,kBAAY,aAAa;AACzB,UAAI,CAAC,MAAM,cAAc,WAAW,GAAG;AACnC,aAAK,IAAI,KAAK,mBAAmB,YAAY,kBAAkB;AAC/D;AAAA,MACJ;AACA,YAAM,QAAQ,IAAI,MAAM,MAAM,SAAS,WAAW;AAClD,WAAK,OAAO,KAAK,KAAK;AAAA,IAC1B;AAAA,EACJ;AAAA,EAEA,MAAM,OAAsB;AACxB,UAAM,YAAY,CAAC;AACnB,eAAW,SAAS,KAAK;AACrB,UAAI,MAAM,MAAM,QAAQ,GAAG;AACvB,kBAAU,KAAK,KAAK;AACpB,cAAM,MAAM,KAAK;AAAA,MACrB,OAAO;AACH,cAAM,OAAO;AACb,aAAK,IAAI,MAAM,SAAS,MAAM,mCAAmC;AAAA,MACrE;AACJ,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,MAAM,SAAwB;AAC1B,UAAM,MAAM,OAAO;AACnB,SAAK,OAAO,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;AAAA,EACzC;AACJ;",
  "names": []
}
