{
  "version": 3,
  "sources": ["../../src/lib/config-custom.ts"],
  "sourcesContent": ["import * as pages from './types/pages';\nimport * as Color from './const/Color';\nimport { panelConfigPartial } from './controller/panel';\nimport { ScreensaverConfig } from './pages/screensaver';\n\nconst pageEntitiesTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'entities1',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'entities1',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            template: 'generic.shutter',\n            dpInit: '0_userdata.0.shutter_test',\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-open' },\n                        color: { type: 'const', constVal: 'aqua', role: 'level.color.name' },\n                    },\n                    false: null,\n                },\n            },\n        },\n        {\n            role: 'rgb',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                speed: {\n                    value: {\n                        type: 'const',\n                        constVal: 1000,\n                    },\n                    factor: undefined,\n                    maxScale: {\n                        type: 'const',\n                        constVal: 3000,\n                    },\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Football-Fan',\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Details',\n                    },\n                    false: undefined,\n                },\n                entityInSel: { value: { type: 'const', constVal: '2' } },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: '1?2?3?4' },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageEntitiesTest2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '',\n    alwaysOn: 'none',\n    uniqueID: 'entities2',\n    useColor: false,\n    config: {\n        card: 'cardEntities',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'entities2',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'timer',\n            type: 'timer',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'timer' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: { type: 'const', constVal: 'Timer' },\n\n                setValue1: { type: 'state', dp: '0_userdata.0.example_state' },\n            },\n        },\n        {\n            role: 'rgbSingle',\n            type: 'light',\n            dpInit: '0_userdata.0.shelly.0.SHRGBW2#258794#1',\n            template: 'light.shelly.rgbw2',\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            type: 'shutter',\n            dpInit: '0_userdata.0.shelly.0.SHSW-25#C45BBE5FC53F#1',\n            template: 'shutter.shelly.2PM',\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            type: 'text',\n            dpInit: 'zigbee2mqtt.0.0x00158d00041fdbcb',\n            template: 'text.battery',\n        },\n    ],\n    items: undefined,\n};\nconst pagePowerTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardPower',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'power1',\n    useColor: false,\n    pageItems: [],\n    config: {\n        card: 'cardPower',\n        data: {\n            headline: { type: 'const', constVal: 'headline' },\n            homeValueTop: {\n                value: { type: 'const', constVal: 'top' },\n            },\n            homeValueBot: {\n                value: { type: 'const', constVal: 'bot' },\n            },\n            leftTop: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 1 },\n                },\n            },\n            leftMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-left' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 2 },\n                },\n            },\n            leftBottom: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-down' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 3 },\n                },\n            },\n            rightTop: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 4 },\n                },\n            },\n            rightMiddle: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-right' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 5 },\n                },\n            },\n            rightBottom: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-down' },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                },\n                value: {\n                    value: { type: 'const', constVal: 6 },\n                },\n            },\n            homeIcon: {\n                true: {\n                    value: { type: 'const', constVal: 'home' },\n                    color: undefined,\n                },\n                false: {\n                    value: undefined,\n                    color: undefined,\n                },\n            },\n        },\n    },\n    items: undefined,\n};\nconst pageMediaTest: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardMedia',\n    dpInit: 'alexa2.0.Echo-Devices.G091EV0704641J8R.Player',\n\n    alwaysOn: 'none',\n    config: {\n        card: 'cardMedia',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'home',\n            },\n            alwaysOnDisplay: {\n                type: 'const',\n                constVal: 'test',\n            },\n            album: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.album',\n                dp: '',\n            },\n            titel: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    type: 'triggered',\n                    dp: '0_userdata.0.spotify-premium.0.player.playlist.trackNo',\n                },\n                color: {\n                    type: 'const',\n                    constVal: { r: 250, g: 2, b: 3 },\n                },\n            },\n            duration: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.duration',\n                dp: '',\n            },\n            elapsed: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.elapsed', 'media.elapsed.text'],\n                dp: '',\n            },\n            volume: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'now',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'medium',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n            },\n            artist: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.artist',\n                    dp: '',\n                },\n                color: undefined,\n                icon: {\n                    type: 'const',\n                    constVal: 'diameter',\n                },\n                list: undefined,\n            },\n            shuffle: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n            },\n            icon: {\n                type: 'const',\n                constVal: 'dialpad',\n            },\n            play: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.play'],\n                dp: '',\n            },\n            mediaState: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.state'],\n                dp: '',\n            },\n            stop: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.stop'],\n                dp: '',\n            },\n            pause: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.pause',\n                dp: '',\n            },\n            forward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.next',\n                dp: '',\n            },\n            backward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.prev',\n                dp: '',\n            },\n            logo: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { r: 250, b: 250, g: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'spotify-playlist',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.spotify-premium.0.player.playlist.trackNo',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'state', dp: '0_userdata.0.spotify-premium.0.player.playlist.trackListArray' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n    ],\n    uniqueID: 'media1',\n    useColor: false,\n};\n\nconst pageAbfall: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardEntities',\n    dpInit: '0_userdata.0.Abfallkalender',\n    uniqueID: 'abfall1',\n    template: 'waste-calendar.entities',\n};\n\nexport const pageMediaTest2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardMedia',\n    dpInit: 'alexa2.0.Echo-Devices.G091EV0704641J8R.Player',\n\n    alwaysOn: 'none',\n    config: {\n        card: 'cardMedia',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'home',\n            },\n            alwaysOnDisplay: {\n                type: 'const',\n                constVal: 'test',\n            },\n            album: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.album',\n                dp: '',\n            },\n            titel: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    mode: 'auto',\n                    type: 'triggered',\n                    role: 'media.title',\n                    dp: '',\n                },\n                color: {\n                    type: 'const',\n                    constVal: { r: 250, g: 2, b: 3 },\n                },\n            },\n            duration: {\n                mode: 'auto',\n                type: 'state',\n                role: 'media.duration',\n                dp: '',\n            },\n            elapsed: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.elapsed', 'media.elapsed.text'],\n                dp: '',\n            },\n            volume: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'now',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: ['level.volume'],\n                    response: 'medium',\n                    scale: { min: 0, max: 100 },\n                    dp: '',\n                },\n            },\n            artist: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.artist',\n                    dp: '',\n                },\n                color: undefined,\n                icon: {\n                    type: 'const',\n                    constVal: 'diameter',\n                },\n                list: undefined,\n            },\n            shuffle: {\n                value: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n                set: {\n                    mode: 'auto',\n                    type: 'state',\n                    role: 'media.mode.shuffle',\n                    dp: '',\n                },\n            },\n            icon: {\n                type: 'const',\n                constVal: 'dialpad',\n            },\n            play: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.play'],\n                dp: '',\n            },\n            mediaState: {\n                mode: 'auto',\n                type: 'triggered',\n                role: ['media.state'],\n                dp: '',\n            },\n            stop: {\n                mode: 'auto',\n                type: 'state',\n                role: ['button.stop'],\n                dp: '',\n            },\n            pause: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.pause',\n                dp: '',\n            },\n            forward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.next',\n                dp: '',\n            },\n            backward: {\n                mode: 'auto',\n                type: 'state',\n                role: 'button.prev',\n                dp: '',\n            },\n            logo: {\n                on: {\n                    type: 'const',\n                    constVal: true,\n                },\n                text: { type: 'const', constVal: '1' },\n                icon: { type: 'const', constVal: 'home' },\n                color: { type: 'const', constVal: { r: 250, b: 250, g: 0 } },\n                list: undefined,\n                action: 'cross',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'spotify-playlist',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'state',\n                        dp: '0_userdata.0.spotify-premium.0.player.playlist.trackNo',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'state', dp: '0_userdata.0.spotify-premium.0.player.playlist.trackListArray' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n    ],\n    uniqueID: 'media1',\n    useColor: false,\n};\nconst pageGridTest1: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid1',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'grid1',\n            },\n        },\n    },\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'number',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: 23,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Number',\n                    },\n                    false: undefined,\n                },\n            },\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            role: 'rgb',\n            type: 'shutter',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'window-shutter-open' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'window-shutter' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                // 1. slider\n                entity1: {\n                    // button\n                    value: { mode: 'auto', role: 'level.blind', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                // 2. slider\n                entity2: {\n                    // button\n                    value: { mode: 'auto', role: 'level.tilt', type: 'triggered', dp: '' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                    minScale: { type: 'const', constVal: 0 },\n                    maxScale: { type: 'const', constVal: 100 },\n                },\n                text: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text',\n                    },\n                    false: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Shutter',\n                },\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text1',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'text2',\n                    },\n                    false: undefined,\n                },\n                up: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.open.blind', 'button.open'],\n                },\n                down: {\n                    type: 'state',\n                    dp: '',\n                    mode: 'auto',\n                    role: ['button.close.blind', 'button.close'],\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'rgb',\n            type: 'light',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: { type: 'triggered', dp: '0_userdata.0.RGB' },\n                    false: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'lightbulb' },\n                        color: { type: 'const', constVal: Color.Yellow },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'lightbulb-outline' },\n                        color: { type: 'const', constVal: Color.HMIOff },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                colorMode: { type: 'const', constVal: true },\n                dimmer: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.dimmer',\n                    },\n                },\n                entity1: {\n                    // button\n                    value: { type: 'triggered', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                entityInSel: undefined,\n                text1: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Licht',\n                    },\n                    false: undefined,\n                },\n                text2: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker1',\n                    },\n                    false: undefined,\n                },\n                text3: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Picker2',\n                    },\n                    false: undefined,\n                },\n                ct: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.ct',\n                    },\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                headline: { type: 'const', constVal: 'insel' },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'music' },\n                        color: { type: 'const', constVal: Color.Gray },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'Navbutton' },\n                    false: undefined,\n                },\n                setNavi: {\n                    type: 'const',\n                    constVal: '3',\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'text',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        text: { type: 'const', constVal: '22.2' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: { type: 'const', constVal: 'text' },\n                    false: undefined,\n                },\n                text1: {\n                    true: { type: 'const', constVal: 'text1' },\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    items: undefined,\n};\nconst pageGridTest2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid2',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'grid2',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'fan',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                entityInSel: undefined,\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'account' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'timer',\n            type: 'timer',\n            dpInit: '',\n\n            data: {\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'timer' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    false: {\n                        value: undefined,\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: { type: 'const', constVal: 'Timer' },\n\n                setValue1: { type: 'state', dp: '0_userdata.0.example_state' },\n            },\n        },\n        {\n            /**\n             * zu 100% geschlossen zu 0% geschlossen read und write mit jeweils 100-val benutzen um das zu 100% ge\u00F6ffnet zu \u00E4ndern.\n             */\n            type: 'text',\n            dpInit: 'zigbee2mqtt.0.0x00158d00041fdbcb',\n            template: 'text.temperature',\n        },\n    ],\n};\nconst pageGridTest4: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid4',\n    useColor: false,\n    config: {\n        card: 'cardGrid',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCberschrift2',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'account' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n\n                setValue1: undefined,\n            },\n        },\n    ],\n};\nconst pageGrid2Test2: pages.PageBaseConfig = {\n    //type: 'sonstiges',\n    card: 'cardGrid2',\n    dpInit: '',\n\n    alwaysOn: 'none',\n    uniqueID: 'grid3',\n    useColor: false,\n    config: {\n        card: 'cardGrid2',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: '\u00DCberschrift',\n            },\n        },\n    },\n    items: undefined,\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityInSel: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'home' },\n                        color: { type: 'const', constVal: Color.Green },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n    ],\n};\nconst pageThermoTest: pages.PageBaseConfig = {\n    card: 'cardThermo',\n\n    uniqueID: 'thermo1',\n    dpInit: '',\n    alwaysOn: 'none',\n    pageItems: [\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'text.list',\n            type: 'input_sel',\n            dpInit: '',\n\n            data: {\n                entityInSel: {\n                    value: {\n                        type: 'triggered',\n                        dp: '0_userdata.0.statesTest',\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                headline: {\n                    type: 'const',\n                    constVal: 'Test',\n                },\n                /**\n                 * valueList string[]/stringify oder string?string?string?string stelle korreliert mit setList  {input_sel}\n                 */\n                //valueList: { type: 'const', constVal: 'home?butter' },\n                /**\n                 * setList: {id:Datenpunkt, value: zu setzender Wert}[] bzw. stringify  oder ein String nach dem Muster datenpunkt?Wert|Datenpunkt?Wert {input_sel}\n                 */\n                //setList: { type: 'const', constVal: '0_userdata.0.test?1|0_userdata.0.test?2' },\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'arrow-up' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: {\n                        type: 'const',\n                        constVal: true,\n                    },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n                setValue1: undefined,\n            },\n        },\n        {\n            role: 'indicator',\n            type: 'button',\n            dpInit: '',\n\n            data: {\n                color: {\n                    true: {\n                        type: 'const',\n                        constVal: Color.HMIOn,\n                    },\n                    false: undefined,\n                    scale: undefined,\n                },\n                icon: {\n                    true: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Blue },\n                    },\n                    false: {\n                        value: { type: 'const', constVal: 'fan' },\n                        color: { type: 'const', constVal: Color.Red },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entity1: {\n                    value: { type: 'state', dp: '0_userdata.0.example_state' },\n                    decimal: undefined,\n                    factor: undefined,\n                    unit: undefined,\n                },\n                text: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        },\n    ],\n    config: {\n        card: 'cardThermo',\n        data: {\n            headline: {\n                type: 'const',\n                constVal: 'headline',\n            },\n            current: {\n                type: 'const',\n                constVal: '20',\n            },\n            unit: {\n                type: 'const',\n                constVal: '\u00B0C',\n            },\n            text1: {\n                type: 'const',\n                constVal: 'text1',\n            },\n            text2: {\n                type: 'const',\n                constVal: 'text2',\n            },\n            minTemp: {\n                type: 'const',\n                constVal: '10',\n            },\n            maxTemp: {\n                type: 'const',\n                constVal: '60',\n            },\n            tempStep: {\n                type: 'const',\n                constVal: '5',\n            },\n            set1: { type: 'state', dp: '0_userdata.0.number1' },\n            //set2: { type: 'state', dp: '0_userdata.0.number2' },\n        },\n    },\n    items: undefined,\n    useColor: false,\n};\nconst pageScreensaverTest: ScreensaverConfig = {\n    card: 'screensaver',\n    // mode of screensaver\n    mode: 'advanced',\n    // in 0 no rotation otherwise < 3 sec = 3 sec for testing -\n    rotationTime: 0,\n    // Config of Entitys\n    entitysConfig: {\n        favoritEntity: [\n            {\n                entityIconSelect: undefined,\n                entityValue: {\n                    value: { type: 'triggered', dp: 'accuweather.0.Current.Temperature' },\n                    decimal: {\n                        type: 'const',\n                        constVal: null,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                entityDateFormat: {\n                    type: 'const',\n                    constVal: null,\n                },\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'state',\n\n                            /** How to use\n                             * this run its own this. U dont have accress to variables that no definied for this.\n                             * Color: in a import of color.ts\n                             * val: is the incoming value - raw\n                             *\n                             * The best thing is to write the function with () => { here }. Then remove the () => {}\n                             * and convert it into a template literal, using ``. A return is mandatory.\n                             */\n                            read: `{\n                        switch (val) {\n                            case 30: // Hot\n                                return 'weather-sunny-alert'; // exceptional\n\n                            case 24: // Ice\n                            case 31: // Cold\n                                return 'snowflake-alert'; // exceptional\n\n                            case 7: // Cloudy\n                            case 8: // Dreary (Overcast)\n                            case 38: // Mostly Cloudy\n                                return 'weather-cloudy'; // cloudy\n\n                            case 11: // fog\n                                return 'weather-fog'; // fog\n\n                            case 25: // Sleet\n                                return 'weather-hail'; // Hail\n\n                            case 15: // T-Storms\n                                return 'weather-lightning'; // lightning\n\n                            case 16: // Mostly Cloudy w/ T-Storms\n                            case 17: // Partly Sunny w/ T-Storms\n                            case 41: // Partly Cloudy w/ T-Storms\n                            case 42: // Mostly Cloudy w/ T-Storms\n                                return 'weather-lightning-rainy'; // lightning-rainy\n\n                            case 33: // Clear\n                            case 34: // Mostly Clear\n                            case 37: // Hazy Moonlight\n                                return 'weather-night';\n\n                            case 3: // Partly Sunny\n                            case 4: // Intermittent Clouds\n                            case 6: // Mostly Cloudy\n                            case 35: // Partly Cloudy\n                            case 36: // Intermittent Clouds\n                                return 'weather-partly-cloudy'; // partlycloudy\n\n                            case 18: // pouring\n                                return 'weather-pouring'; // pouring\n\n                            case 12: // Showers\n                            case 13: // Mostly Cloudy w/ Showers\n                            case 14: // Partly Sunny w/ Showers\n                            case 26: // Freezing Rain\n                            case 39: // Partly Cloudy w/ Showers\n                            case 40: // Mostly Cloudy w/ Showers\n                                return 'weather-rainy'; // rainy\n\n                            case 19: // Flurries\n                            case 20: // Mostly Cloudy w/ Flurries\n                            case 21: // Partly Sunny w/ Flurries\n                            case 22: // Snow\n                            case 23: // Mostly Cloudy w/ Snow\n                            case 43: // Mostly Cloudy w/ Flurries\n                            case 44: // Mostly Cloudy w/ Snow\n                                return 'weather-snowy'; // snowy\n\n                            case 29: // Rain and Snow\n                                return 'weather-snowy-rainy'; // snowy-rainy\n\n                            case 1: // Sunny\n                            case 2: // Mostly Sunny\n                            case 5: // Hazy Sunshine\n                                return 'weather-sunny'; // sunny\n\n                            case 32: // windy\n                                return 'weather-windy'; // windy\n\n                            default:\n                                return 'alert-circle-outline';\n                        }\n                    }`,\n\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                        },\n                        color: {\n                            type: 'triggered',\n                            dp: 'accuweather.0.Current.WeatherIcon',\n                            read: `switch (val) {\n                        case 24: // Ice\n                        case 30: // Hot\n                        case 31: // Cold\n                            return Color.swExceptional; // exceptional\n\n                        case 7: // Cloudy\n                        case 8: // Dreary (Overcast)\n                        case 38: // Mostly Cloudy\n                            return Color.swCloudy; // cloudy\n\n                        case 11: // fog\n                            return Color.swFog; // fog\n\n                        case 25: // Sleet\n                            return Color.swHail; // Hail\n\n                        case 15: // T-Storms\n                            return Color.swLightning; // lightning\n\n                        case 16: // Mostly Cloudy w/ T-Storms\n                        case 17: // Partly Sunny w/ T-Storms\n                        case 41: // Partly Cloudy w/ T-Storms\n                        case 42: // Mostly Cloudy w/ T-Storms\n                            return Color.swLightningRainy; // lightning-rainy\n\n                        case 33: // Clear\n                        case 34: // Mostly Clear\n                        case 37: // Hazy Moonlight\n                            return Color.swClearNight;\n\n                        case 3: // Partly Sunny\n                        case 4: // Intermittent Clouds\n                        case 6: // Mostly Cloudy\n                        case 35: // Partly Cloudy\n                        case 36: // Intermittent Clouds\n                            return Color.swPartlycloudy; // partlycloudy\n\n                        case 18: // pouring\n                            return Color.swPouring; // pouring\n\n                        case 12: // Showers\n                        case 13: // Mostly Cloudy w/ Showers\n                        case 14: // Partly Sunny w/ Showers\n                        case 26: // Freezing Rain\n                        case 39: // Partly Cloudy w/ Showers\n                        case 40: // Mostly Cloudy w/ Showers\n                            return Color.swRainy; // rainy\n\n                        case 19: // Flurries\n                        case 20: // Mostly Cloudy w/ Flurries\n                        case 21: // Partly Sunny w/ Flurries\n                        case 22: // Snow\n                        case 23: // Mostly Cloudy w/ Snow\n                        case 43: // Mostly Cloudy w/ Flurries\n                        case 44: // Mostly Cloudy w/ Snow\n                            return Color.swSnowy; // snowy\n\n                        case 29: // Rain and Snow\n                            return Color.swSnowyRainy; // snowy-rainy\n\n                        case 1: // Sunny\n                        case 2: // Mostly Sunny\n                        case 5: // Hazy Sunshine\n                            return Color.swSunny; // sunny\n\n                        case 32: // windy\n                            return Color.swWindy; // windy\n\n                        default:\n                            return Color.White;\n                    }`,\n                        },\n                    },\n                    false: { value: undefined, color: undefined },\n                },\n\n                entityText: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        ],\n        leftEntity: [\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#FF00FF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n        ],\n        bottomEntity: [\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Daily.Day1.Sunrise',\n                        forceType: 'string',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n\n                entityDateFormat: {\n                    type: 'const',\n                    constVal: JSON.stringify({ hour: '2-digit', minute: '2-digit' }),\n                },\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-sunset-up',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.Blue,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'TokenSun',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#FF00FF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.RelativeHumidity',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '%',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'water-percent',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 100, val_best: 65 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Feuchte.',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.DewPoint',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'thermometer-water',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#7799FF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Taup.',\n                    },\n                    false: undefined,\n                },\n            },\n        ],\n        alternateEntity: [],\n        indicatorEntity: [\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Daily.Day1.Sunrise',\n                        forceType: 'string',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0C',\n                    },\n                },\n\n                entityDateFormat: {\n                    type: 'const',\n                    constVal: JSON.stringify({ hour: '2-digit', minute: '2-digit' }),\n                },\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-sunset-up',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: {\n                            type: 'const',\n                            constVal: Color.Blue,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Sonne',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindDirectionText',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 0,\n                    },\n                    factor: undefined,\n                    unit: {\n                        type: 'const',\n                        constVal: '\u00B0',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'windsock',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: '#FF00FF',\n                        },\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Windr.',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindSpeed',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-windy',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 80 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'Wind',\n                    },\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'state',\n                        dp: 'accuweather.0.Current.WindGust',\n                    },\n                    decimal: {\n                        type: 'const',\n                        constVal: 1,\n                    },\n                    factor: {\n                        type: 'const',\n                        constVal: 1000 / 3600,\n                    },\n                    unit: {\n                        type: 'const',\n                        constVal: 'm/s',\n                    },\n                },\n                entityDateFormat: undefined,\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'weather-tornado',\n                        },\n                        color: undefined,\n                    },\n                    false: {\n                        value: undefined,\n                        color: undefined,\n                    },\n\n                    scale: {\n                        type: 'const',\n                        constVal: { val_min: 0, val_max: 7.2 },\n                    },\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n                entityText: {\n                    true: {\n                        type: 'const',\n                        constVal: 'B\u00F6en',\n                    },\n                    false: undefined,\n                },\n            },\n        ],\n        mrIconEntity: [\n            {\n                entityValue: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power1',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                    scale: undefined,\n                    maxBri: undefined,\n                    minBri: undefined,\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n            {\n                entityValue: {\n                    value: {\n                        type: 'internal',\n                        dp: 'cmd/power2',\n                    },\n                },\n                entityDateFormat: undefined,\n\n                entityIcon: {\n                    true: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.Yellow,\n                        },\n                    },\n                    false: {\n                        value: {\n                            type: 'const',\n                            constVal: 'lightbulb-outline',\n                        },\n                        color: {\n                            type: 'const',\n                            constVal: Color.HMIOff,\n                        },\n                    },\n                },\n                entityIconSelect: undefined,\n\n                entityText: {\n                    true: undefined,\n                    false: undefined,\n                },\n            },\n        ],\n    },\n};\nexport const Testconfig: Partial<panelConfigPartial> = {\n    pages: [\n        pageGridTest4,\n        pageEntitiesTest1,\n        pagePowerTest1,\n        pageThermoTest,\n        pageGridTest1,\n        pageGrid2Test2,\n        pageGridTest2,\n        pageScreensaverTest,\n        pageMediaTest,\n        pageEntitiesTest2,\n        pageAbfall,\n    ],\n    // override by password.ts\n    navigation: [\n        {\n            name: 'main', //main ist die erste Seite\n            page: 'entities1',\n            left: { single: '7' }, // Die 4 bezieht sich auf den name: 4\n            right: { single: 'abfall1', double: '2' },\n        },\n        {\n            name: '5', //main ist die erste Seite\n            page: 'thermo1',\n            left: { single: '4' }, // Die 4 bezieht sich auf den name: 4\n            right: { single: '6', double: 'main' },\n        },\n        {\n            name: 'abfall1', //main ist die erste Seite\n            page: 'abfall1',\n            left: { single: 'main' }, // Die 4 bezieht sich auf den name: 4\n            right: { single: 'entities2', double: 'main' },\n        },\n        {\n            name: 'entities2', //main ist die erste Seite\n            page: 'entities2',\n            left: { single: 'main' }, // Die 4 bezieht sich auf den name: 4\n            right: { single: '1', double: 'main' },\n        },\n        {\n            name: '6',\n            page: 'power1',\n            left: { single: '5' }, // Die 4 bezieht sich auf den name: 4\n            right: { single: '7', double: 'main' },\n        },\n        {\n            name: '7', //main ist die erste Seite\n            page: 'grid4',\n            left: { single: '6' }, // Die 4 bezieht sich auf den name: 4\n            right: { single: 'main', double: 'main' },\n        },\n        {\n            name: '1',\n            left: { single: 'main' }, // Die 0 bezieht sich auf den name: 0\n            right: { single: '2' },\n            page: 'grid1', // das grid1 bezieht sich auf die uniqueID oben in pages\n        },\n        {\n            name: '2',\n            left: { single: '1' },\n            right: { single: '3' },\n            page: 'grid2',\n        },\n        {\n            name: '3',\n            left: { single: '2' },\n            right: { single: '4', double: 'main' },\n            page: 'media1',\n        },\n        {\n            name: '4',\n            left: { single: '3', double: '1' },\n            right: { single: '5', double: '2' },\n            page: 'grid3',\n        },\n    ],\n    topic: 'nspanel/ns_panel2',\n    name: 'Wohnzimmer',\n    config: {\n        // dat hier hat noch keine bedeutung glaube ich :)\n        momentLocale: '',\n        locale: 'de-DE',\n        iconBig1: false,\n        iconBig2: false,\n    },\n    timeout: 30, // dat kommt vom Admin\n    dimLow: 20,\n    dimHigh: 90,\n};\n\n/**\n * command for javascript adapter\n * sendTo('nspanel-lovelace-ui.0', 'config', Testconfig)\n */\n\n/*\n// pageType~popupNotify\nexport const welcomePopupPayload =\n    'entityUpdateDetail~ -~Willkommen zum NSPanel~63488~~2000~~2000~' +\n    '  Einen sch\u00F6nen Tag           ' +\n    '     w\u00FCnschen dir               ' +\n    ' Armilar, TT-Tom, ticaki      ' +\n    '   & Kuckuckmann~2000~3~1~\uF4DD~2000';\n\n/*\n   SendToPanel({ payload:'pageType~popupNotify'});\n                    SendToPanel({ payload:'entityUpdateDetail~ -~Willkommen zum NSPanel~63488~~2000~~2000~' +\n                        '  Einen sch\u00F6nen Tag           '+\n                        '     w\u00FCnschen dir               ' +\n                        ' Armilar, TT-Tom, ticaki      ' +\n                        '   & Kuckuckmann~2000~3~1~\uF4DD~2000'});*/\n"],
  "mappings": "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",
  "names": []
}
