{
  "version": 3,
  "sources": ["../../../src/lib/pages/pageMenu.ts"],
  "sourcesContent": ["import { Page, PageInterface } from '../classes/Page';\nimport { Color } from '../const/Color';\nimport { Icons } from '../const/icon_mapping';\nimport { getPayload } from '../const/tools';\nimport * as pages from '../types/pages';\nimport { handleCardRole } from './data-collection-functions';\nimport { PageItem } from './pageItem';\n\nexport class PageMenu extends Page {\n    protected maxItems: number = 4;\n    protected step: number = 0;\n    protected iconLeft: string = '';\n    protected iconRight: string = '';\n    protected iconLeftP: string = '';\n    protected iconRightP: string = '';\n    private tempItems: (PageItem | undefined)[] | undefined;\n\n    constructor(config: PageInterface, options: pages.PageBaseConfig) {\n        super(config, options);\n    }\n\n    public async getOptions(result: string[]): Promise<string[]> {\n        if (this.pageItems) {\n            if (\n                this.config &&\n                (this.config.card === 'cardEntities' ||\n                    this.config.card === 'cardGrid' ||\n                    this.config.card === 'cardGrid2')\n            ) {\n                /**\n                 * Live update von gefilterten Adaptern.\n                 */\n                let pageItems = this.pageItems;\n                if (this.config.filterType === 'true' || this.config.filterType === 'false') {\n                    this.tempItems = [];\n                    const testIt = this.config.filterType === 'true';\n                    for (const p of this.pageItems) {\n                        if (\n                            p &&\n                            p.dataItems &&\n                            p.dataItems.data &&\n                            'entity1' in p.dataItems.data &&\n                            p.dataItems.data.entity1 &&\n                            p.dataItems.data.entity1.value &&\n                            testIt === (await p.dataItems.data.entity1.value.getBoolean())\n                        )\n                            this.tempItems.push(p);\n                    }\n                    pageItems = this.tempItems;\n                }\n\n                const isEntities = this.config.card === 'cardEntities';\n                let maxItems = this.maxItems;\n                let a = 0;\n                if (this.pageItems.length > maxItems) {\n                    a = (isEntities ? maxItems : maxItems / 2) * this.step;\n                    maxItems = a + maxItems;\n                }\n                let b = 0;\n\n                if (this.config.scrollType === 'page') {\n                    for (; a < maxItems; a++) {\n                        const temp = pageItems[a];\n                        result[b++] = temp ? await temp.getPageItemPayload() : '~~~~~';\n                    }\n                } else {\n                    let a = this.step;\n                    for (; a < this.maxItems + this.step; a++) {\n                        const temp = pageItems[a];\n                        result[b++] = temp ? await temp.getPageItemPayload() : '~~~~~';\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    protected async onVisibilityChange(val: boolean): Promise<void> {\n        if (val) {\n            if (\n                this.config &&\n                (this.config.card === 'cardEntities' ||\n                    this.config.card === 'cardGrid' ||\n                    this.config.card === 'cardGrid2')\n            ) {\n                const temp = await handleCardRole(this.adapter, this.config.cardRole, this);\n                if (temp) this.pageItemConfig = temp;\n            }\n        }\n        await super.onVisibilityChange(val);\n    }\n\n    goLeft(): void {\n        if (\n            !this.config ||\n            (this.config.card !== 'cardEntities' && this.config.card !== 'cardGrid' && this.config.card !== 'cardGrid2')\n        )\n            return;\n\n        if (--this.step < 0) {\n            this.step = 0;\n            this.panel.navigation.goLeft();\n        } else this.update();\n    }\n    goRight(): void {\n        if (\n            !this.config ||\n            (this.config.card !== 'cardEntities' && this.config.card !== 'cardGrid' && this.config.card !== 'cardGrid2')\n        )\n            return;\n        const pageScroll = this.config.scrollType === 'page';\n\n        const length = this.tempItems ? this.tempItems.length : this.pageItems ? this.pageItems.length : 0;\n        if (!pageScroll ? ++this.step + this.maxItems > length : ++this.step * this.maxItems >= length) {\n            this.step--;\n            this.panel.navigation.goRight();\n        } else this.update();\n    }\n    protected getNavigation(): string {\n        if (\n            !this.config ||\n            (this.config.card !== 'cardEntities' && this.config.card !== 'cardGrid' && this.config.card !== 'cardGrid2')\n        )\n            return '';\n        const pageScroll = this.config.scrollType === 'page';\n        const length = this.tempItems ? this.tempItems.length : this.pageItems ? this.pageItems.length : 0;\n        if (this.maxItems >= length) {\n            return super.getNavigation();\n        }\n        let left = '';\n        let right = '';\n        if (this.step <= 0) {\n            left = this.panel.navigation.buildNavigationString('left');\n        }\n        if (!pageScroll ? this.step + this.maxItems >= length : (this.step + 1) * this.maxItems >= length) {\n            right = this.panel.navigation.buildNavigationString('right');\n        }\n        if (!left)\n            left = getPayload(\n                'button',\n                'bSubPrev',\n                pageScroll ? Icons.GetIcon('arrow-up-bold-outline') : Icons.GetIcon('arrow-up-bold'),\n                String(Color.rgb_dec565(Color.HMIOn)),\n                '',\n                '',\n            );\n\n        if (!right)\n            right = getPayload(\n                'button',\n                'bSubNext',\n                pageScroll ? Icons.GetIcon('arrow-down-bold-outline') : Icons.GetIcon('arrow-down-bold'),\n                String(Color.rgb_dec565(Color.HMIOn)),\n                '',\n                '',\n            );\n\n        return getPayload(left, right);\n    }\n\n    async reset(): Promise<void> {\n        this.step = 0;\n    }\n}\n"],
  "mappings": "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",
  "names": ["a"]
}
