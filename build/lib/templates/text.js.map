{
  "version": 3,
  "sources": ["../../../src/lib/templates/text.ts"],
  "sourcesContent": ["import { PageItemOptionsTemplate } from '../types/type-pageItem';\nimport * as Color from '../const/Color';\n\nexport const textTemplates: PageItemOptionsTemplate[] = [\n    {\n        template: 'text.window.isOpen',\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'window-open-variant' },\n                    color: { type: 'const', constVal: Color.Cyan },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'window-closed-variant' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n                scale: undefined,\n                maxBri: undefined,\n                minBri: undefined,\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'sensor.window',\n                    dp: '',\n                },\n                decimal: undefined,\n                factor: undefined,\n                unit: undefined,\n            },\n            text: {\n                true: { type: 'const', constVal: 'text' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'open' },\n                false: { type: 'const', constVal: 'close' },\n            },\n        },\n    },\n    {\n        template: 'text.window.isClose',\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'window-open-variant' },\n                    color: { type: 'const', constVal: Color.Cyan },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'window-closed-variant' },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'sensor.window',\n                    dp: '',\n                    read: 'return !val',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'text' },\n                false: undefined,\n            },\n            text1: {\n                true: { type: 'const', constVal: 'open' },\n                false: { type: 'const', constVal: 'close' },\n            },\n        },\n    },\n    {\n        template: 'text.temperature',\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'temperature-celsius' },\n                    text: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.temperature',\n                        dp: '',\n                        read: 'return Math.random(val*10)/10',\n                    },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'temperature-celsius' },\n                    color: { type: 'const', constVal: Color.Blue },\n                },\n                scale: { type: 'const', constVal: { min: 0, max: 30 } },\n            },\n            entity1: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.temperature',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'Temperature' },\n                false: undefined,\n            },\n            text1: {\n                true: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.temperature',\n                    dp: '',\n                    read: 'return Math.random(val*10)/10',\n                },\n                false: undefined,\n            },\n        },\n    },\n    {\n        template: 'text.battery',\n        role: 'text',\n        adapter: '',\n        type: 'text',\n\n        data: {\n            icon: {\n                true: {\n                    value: { type: 'const', constVal: 'battery' },\n                    text: {\n                        type: 'triggered',\n                        mode: 'auto',\n                        role: 'value.battery',\n                        dp: '',\n                    },\n                    color: { type: 'const', constVal: Color.Green },\n                },\n                false: {\n                    value: { type: 'const', constVal: 'battery-outline' },\n                    color: { type: 'const', constVal: Color.Red },\n                },\n                scale: { type: 'const', constVal: { min: 0, max: 100 } },\n            },\n            entity1: {\n                value: {\n                    type: 'state',\n                    mode: 'auto',\n                    role: 'value.battery',\n                    dp: '',\n                },\n            },\n            text: {\n                true: { type: 'const', constVal: 'Battery' },\n                false: undefined,\n            },\n            entity2: {\n                value: {\n                    type: 'triggered',\n                    mode: 'auto',\n                    role: 'value.battery',\n                    dp: '',\n                },\n                unit: { type: 'const', constVal: '%' },\n            },\n        },\n    },\n];\n"],
  "mappings": "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",
  "names": []
}
